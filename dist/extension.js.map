{"version":3,"sources":["../webpack/bootstrap","../external \"path\"","../external \"fs\"",".././node_modules/shelljs/src/common.js","../external \"vscode\"","../external \"util\"",".././node_modules/picomatch/lib/utils.js",".././node_modules/picomatch/lib/constants.js",".././node_modules/braces/lib/stringify.js",".././node_modules/braces/lib/utils.js","../external \"os\"",".././node_modules/glob/glob.js",".././node_modules/minimatch/minimatch.js",".././node_modules/path-is-absolute/index.js",".././node_modules/shelljs/src/cd.js",".././node_modules/shelljs/src/cp.js",".././node_modules/shelljs/src/error.js",".././node_modules/shelljs/src/tempdir.js",".././node_modules/shelljs/src/pwd.js",".././node_modules/shelljs/src/ls.js",".././node_modules/shelljs/src/rm.js",".././node_modules/shelljs/shell.js",".././node_modules/fill-range/index.js",".././node_modules/fs.realpath/index.js","../external \"assert\"",".././node_modules/glob/common.js",".././node_modules/wrappy/wrappy.js",".././node_modules/once/once.js",".././node_modules/shelljs/src/cat.js",".././node_modules/shelljs/src/chmod.js",".././node_modules/shelljs/src/dirs.js",".././node_modules/shelljs/src/echo.js",".././node_modules/shelljs/src/exec.js","../external \"child_process\"",".././node_modules/shelljs/src/exec-child.js",".././node_modules/shelljs/src/find.js",".././node_modules/shelljs/src/grep.js",".././node_modules/shelljs/src/head.js",".././node_modules/shelljs/src/ln.js",".././node_modules/shelljs/src/mkdir.js",".././node_modules/shelljs/src/mv.js",".././node_modules/shelljs/src/sed.js",".././node_modules/shelljs/src/set.js",".././node_modules/shelljs/src/sort.js",".././node_modules/shelljs/src/tail.js",".././node_modules/shelljs/src/test.js",".././node_modules/shelljs/src/to.js",".././node_modules/shelljs/src/toEnd.js",".././node_modules/shelljs/src/touch.js",".././node_modules/shelljs/src/uniq.js",".././node_modules/shelljs/src/which.js",".././node_modules/micromatch/index.js",".././node_modules/braces/index.js",".././node_modules/braces/lib/compile.js",".././node_modules/to-regex-range/index.js",".././node_modules/to-regex-range/node_modules/is-number/index.js",".././node_modules/braces/lib/expand.js",".././node_modules/braces/lib/parse.js",".././node_modules/braces/lib/constants.js",".././node_modules/picomatch/index.js",".././node_modules/picomatch/lib/picomatch.js",".././node_modules/picomatch/lib/scan.js",".././node_modules/picomatch/lib/parse.js",".././node_modules/fs.realpath/old.js",".././node_modules/brace-expansion/index.js",".././node_modules/concat-map/index.js",".././node_modules/balanced-match/index.js",".././node_modules/inherits/inherits.js",".././node_modules/inherits/inherits_browser.js","../external \"events\"",".././node_modules/glob/sync.js",".././node_modules/inflight/inflight.js",".././node_modules/shelljs/commands.js",".././node_modules/shelljs/src sync ^\\.\\/.*$","../(webpack)/buildin/module.js",".././src/relatedFile.ts",".././src/cache.ts",".././src/git.ts",".././src/provider.ts",".././src/extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","os","fs","glob","shell","shellMethods","extend","assign","isElectron","Boolean","process","versions","electron","DEFAULT_CONFIG","fatal","globOptions","maxdepth","noglob","silent","verbose","execPath","bufLength","config","reset","this","resetForTesting","state","error","errorCode","currentCmd","isObject","a","log","console","apply","arguments","convertErrorOutput","msg","TypeError","replace","_code","options","Error","DEFAULT_OPTIONS","continue","code","prefix","logEntry","length","retValue","ShellString","stdout","stderr","that","Array","join","String","pipeMethods","forEach","cmd","parseOptions","opt","map","errorOptions","keys","letter","optName","slice","split","optionName","expand","list","isArray","expanded","listEl","push","ret","sync","e","concat","env","OLDPWD","buffer","Buffer","alloc","len","wrap","fn","args","pipedValue","unix","constructor","unshift","reduce","accum","cur","arg","toString","homeDir","homedir","allowGlobbing","globStart","cmdOptions","wrapOutput","unlinkSync","file","chmodSync","statFollowLinks","statSync","statNoFollowLinks","lstatSync","randomFileName","randomHash","count","parseInt","Math","random","hash","readFromPipe","DEFAULT_WRAP_OPTIONS","canReceivePipe","pipeOnly","register","implementation","wrapOptions","option","path","win32","platform","REGEX_BACKSLASH","REGEX_REMOVE_BACKSLASH","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_GLOBAL","val","hasRegexChars","str","test","isRegexChar","escapeRegex","toPosixSlashes","removeBackslashes","match","supportsLookbehinds","segs","version","Number","isWindows","windows","sep","escapeLast","input","char","lastIdx","idx","lastIndexOf","removePrefix","output","startsWith","contains","negated","POSIX_CHARS","DOT_LITERAL","PLUS_LITERAL","QMARK_LITERAL","SLASH_LITERAL","ONE_CHAR","QMARK","END_ANCHOR","DOTS_SLASH","NO_DOT","NO_DOTS","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK_NO_DOT","STAR","START_ANCHOR","WINDOWS_CHARS","MAX_LENGTH","POSIX_REGEX_SOURCE","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REPLACEMENTS","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_ASTERISK","CHAR_AMPERSAND","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_COMMA","CHAR_DOT","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_EXCLAMATION_MARK","CHAR_FORM_FEED","CHAR_FORWARD_SLASH","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_ANGLE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_SQUARE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","SEP","extglobChars","chars","type","open","close","globChars","utils","ast","stringify","node","parent","invalidBlock","escapeInvalid","isInvalidBrace","invalidNode","invalid","isOpenOrClose","nodes","child","isInteger","num","trim","find","exceedsLimit","min","max","step","limit","escapeNode","block","escaped","encloseBrace","commas","ranges","dollar","acc","flatten","result","flat","arr","ele","rp","minimatch","inherits","Minimatch","EE","EventEmitter","assert","isAbsolute","globSync","common","setopts","ownProp","inflight","childrenIgnored","isIgnored","once","pattern","cb","Glob","GlobSync","_didRealPath","set","matches","on","self","_processing","_emitQueue","_processQueue","paused","noprocess","done","_process","_finish","hasMagic","options_","origin","add","j","aborted","realpath","_didRealpath","_realpath","finish","emit","found","_realpathSet","next","index","matchset","_makeAbs","realpathCache","er","real","syscall","_mark","mark","f","makeAbs","abort","pause","resume","eq","_emitMatch","pq","inGlobStar","_processSimple","read","remain","abs","GLOBSTAR","_processGlobStar","_processReaddir","_readdir","entries","_processReaddir2","pn","negate","rawGlob","_glob","dotOk","dot","charAt","matchedEntries","stat","nomount","root","shift","absolute","nodir","cache","st","statCache","_readdirInGlobStar","follow","lstatcb","lstat","isSym","isSymbolicLink","symlinks","isDirectory","readdir","_readdirError","_readdirEntries","readdirCb","cwdAbs","cwd","strict","_processGlobStar2","remainWithoutGlobStar","gspref","noGlobStar","instead","below","_stat","exists","_processSimple2","trail","resolve","needDir","maxLength","undefined","statcb","_stat2","plTypes","reSpecials","slashSplit","ext","b","k","assertValidPattern","nocomment","regexp","comment","empty","make","braceExpand","nobrace","filter","defaults","def","orig","makeRe","debug","_made","parseNegate","globSet","globParts","si","parse","indexOf","negateOffset","nonegate","substr","isSub","noglobstar","stateChar","re","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","clearStateChar","qmark","noext","start","reStart","pl","pop","reEnd","cs","substring","RegExp","sp","SUBPARSE","tail","_","$1","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","globUnescape","flags","nocase","regExp","_src","twoStar","regExpEscape","ex","mm","nonull","partial","filename","matchBase","matchOne","flipNegate","fi","pi","fl","hit","fr","pr","swallowee","toLowerCase","posix","exec","device","isUnc","_cd","dir","curDir","chdir","err","e2","copyFileSync","srcFile","destFile","existsSync","update","mtime","followsymlink","symlinkFull","readlinkSync","symlinkSync","buf","bytesRead","pos","fdr","fdw","openSync","readSync","writeSync","closeSync","cpdirSyncRecursive","sourceDir","destDir","currentDepth","opts","mkdirSync","files","readdirSync","srcFileStat","cpcheckcycle","no_force","checkDir","checkRecentCreated","sources","lookedSource","some","src","basename","sourcerealpath","realpathSync","symlinkrealpath","_cp","dest","noFollowsymlink","recursive","destExists","destStat","isFile","srcIndex","srcStat","newDest","dirname","thisDest","normalize","thisDestExists","relative","cachedTempDir","writeableDir","testFile","writeFileSync","_tempDir","tmpdir","TMPDIR","TEMP","TMP","Wimp$ScrapDir","tempDir","isCached","clearCache","_pwd","globPatternRecursive","_ls","paths","all_deprecated","all","pushFile","relName","long","link","addLsAttributes","directory","item","pathName","stats","nlink","uid","gid","size","rmdirSyncRecursive","force","fromSymlink","isWriteable","Date","now","rmdirSync","writePermission","__fd","handleFile","handleDirectory","handleSymbolicLink","handleFIFO","_rm","lstats","filepath","isFIFO","command","exit","util","toRegexRange","isValidValue","isNumber","zeros","pad","toNumber","dash","padStart","toMaxLen","negative","toRange","isNumbers","fromCharCode","toRegex","end","capture","rangeError","RangeError","inspect","invalidRange","strictRanges","fillNumbers","descending","startString","endString","stepString","padded","maxLen","format","transform","parts","negatives","positives","range","sort","toSequence","fill","charCodeAt","fillLetters","invalidStep","monkeypatch","unmonkeypatch","origRealpath","origRealpathSync","ok","old","newError","obj","field","nounique","nosort","Infinity","ignore","ignoreMap","setupIgnores","changedCwd","nou","literal","alphasort","notDir","isDir","slash","mabs","gmatcher","localeCompare","gpattern","matcher","wrappy","wrapper","called","onceStrict","onceError","proto","Function","configurable","_cat","cat","readFileSync","number","addNumbers","lines","lastLine","line","numberedLine","base","PERMS","OTHER_EXEC","EXEC","WRITE","READ","OTHER_WRITE","OTHER_READ","GROUP_EXEC","GROUP_WRITE","GROUP_READ","OWNER_EXEC","OWNER_WRITE","OWNER_READ","STICKY","SETGID","SETUID","TYPE_MASK","_chmod","filePattern","addFile","expandedFile","perms","newPerms","isNaN","symbolicMode","applyTo","operator","change","changeOwner","changeGroup","changeOther","changeRead","changeWrite","changeExec","changeExecDir","changeSticky","changeSetuid","mask","changes","_dirs","_pushd","_popd","_dirStack","_isStackIndex","_parseStackIndex","_actualDirStack","dirs","splice","quiet","clear","stack","pushd","popd","_echo","messages","no_newline","write","_exec","callback","pipe","async","maxBuffer","encoding","stdin","execAsync","paramsFile","stderrFile","stdoutFile","paramsToSerialize","execOptions","writeFileLockedDown","filePath","data","JSON","execArgs","__dirname","stdio","execFileSync","status","execSync","childProcess","paramFilePath","argv","serializedParams","params","exitCode","stdoutStream","createWriteStream","stderrStream","_find","subfile","_grep","regex","grep","ignoreCase","contents","nameOnly","matched","inverse","readSomeLines","numLines","numLinesRead","bufStr","_head","head","shouldAppendNewline","hasTrailingNewline","_ln","source","sourcePath","symlink","linkType","resolvedSourcePath","message","linkSync","mkdirSyncRecursive","baseDir","_mkdir","fullpath","reason","cp","rm","_mv","renameSync","_sed","replacement","sed","inplace","_set","parseNumber","unixCmp","aLower","bLower","numericalCmp","objA","objB","_sort","trimRight","sorted","numerical","reverse","_tail","_test","canInterpret","isBlockDevice","character","isCharacterDevice","socket","isSocket","_to","_toEnd","appendFileSync","_touch","touchFile","tryStatFile","no_create","date","atime","reference","refStat","atime_only","mtime_only","utimesSync","_uniq","uniqed","reduceRight","res","ln","toLocaleLowerCase","duplicates","to","_which","isWindowsPlatform","splitPath","delimiter","checkPath","accessSync","isExecutable","pathArray","PATH","queryMatches","pathExtArray","PATHEXT","toUpperCase","attempt","newAttempt","braces","picomatch","isEmptyString","micromatch","patterns","omit","Set","keep","items","onResult","isMatch","negatedExtglob","delete","has","failglob","nullglob","unescape","any","not","includes","matchKeys","every","v","scan","compile","nodupes","noempty","walk","isOpen","isClose","prev","relaxZeros","strictZeros","cacheKey","shorthand","isPadded","hasPadding","splitToPatterns","neg","onlyNegative","filterPatterns","onlyPositive","intersected","collatePatterns","rangeToPattern","stop","digits","zipped","zip","startDigit","stopDigit","toCharacterClass","tok","nines","countNines","stops","countZeros","compare","splitToRanges","tokens","padZeros","string","toQuantifier","comparison","intersection","repeat","integer","pow","diff","relax","isFinite","append","queue","stash","enclose","rangeLimit","q","CHAR_BACKSLASH","CHAR_BACKTICK","SyntaxError","brackets","depth","advance","siblings","before","keepQuotes","keepEscaping","CHAR_DOLLAR","constants","returnState","fns","isState","compileRe","ignoreOpts","onMatch","returnObject","onIgnore","fastpaths","returnOutput","prepend","parsed","isPathSeparator","token","isPrefix","isGlobstar","scanToEnd","slashes","lastIndex","isBrace","isBracket","isGlob","isExtglob","braceEscaped","backslashes","finished","eos","noparen","maxDepth","prevIndex","expandRange","syntaxError","bos","PLATFORM_CHARS","EXTGLOB_CHARS","globstar","nodot","qmarkNoDot","star","bash","noextglob","consumed","backtrack","parens","quotes","extglobs","peek","remaining","consume","increment","decrement","extglob","inner","extglobOpen","conditions","extglobClose","rest","extglobStar","expression","esc","first","pre","strictBrackets","nobracket","prevValue","literalBrackets","outputIndex","tokensIndex","brace","dots","comma","out","toks","prior","isStart","afterStar","after","strictSlashes","suffix","slashDot","pathModule","DEBUG","NODE_DEBUG","maybeCallback","backtrace","missingCallback","throwDeprecation","noDeprecation","traceDeprecation","trace","rethrow","nextPartRe","splitRootRe","current","previous","original","seenLinks","knownHard","resolvedLink","linkTarget","id","dev","ino","nextTick","LOOP","gotResolvedLink","gotStat","gotTarget","readlink","target","concatMap","balanced","isTop","expansions","isNumericSequence","body","isAlphaSequence","isSequence","isOptions","post","escClose","parseCommaParts","postParts","embrace","N","x","numeric","y","width","incr","lte","gte","need","z","el","expansion","escSlash","escOpen","escComma","escPeriod","escapeBraces","unescapeBraces","xs","maybeMatch","reg","begs","beg","left","right","ai","bi","ctor","superCtor","super_","writable","TempCtor","newPattern","reqs","array","RES","cbs","makeres","webpackContext","req","webpackContextResolve","webpackPolyfill","deprecate","children","fileFsPath","longLabel","super","None","uri","label","tooltip","resourceUri","description","title","_state","Map","workspaceUri","fileUri","workspaceFsPath","fsPath","entry","workspaceCache","cacheEntry","entryTime","valueOf","_lastClear","MAX_CACHE_AGE","git","vscodeGit","getExtension","enabled","getAPI","getRelatedFilesFor","Promise","reject","noEmptyLines","IGNORE_GLOBS","_onDidChangeTreeData","onDidChangeTreeData","event","_cache","fire","setTimeout","clearOldEntries","activeTextEditor","workspace","getWorkspaceFolder","document","_getCachedRelatedFilesFor","cacheHit","promise","_getRelatedFilesFor","relativeFsPaths","fullFsPaths","fullFsPathCounts","ii","fileName","fullFsPath","from","provider","activate","context","registerTreeDataProvider","registerCommand","updateView","onDidChangeActiveTextEditor","subscriptions","openDocument","textDocuments","preloadCacheFor","deactivate"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 76);\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","// Ignore warning about 'new String()'\n/* eslint no-new-wrappers: 0 */\n'use strict';\n\nvar os = require('os');\nvar fs = require('fs');\nvar glob = require('glob');\nvar shell = require('..');\n\nvar shellMethods = Object.create(shell);\n\nexports.extend = Object.assign;\n\n// Check if we're running under electron\nvar isElectron = Boolean(process.versions.electron);\n\n// Module globals (assume no execPath by default)\nvar DEFAULT_CONFIG = {\n  fatal: false,\n  globOptions: {},\n  maxdepth: 255,\n  noglob: false,\n  silent: false,\n  verbose: false,\n  execPath: null,\n  bufLength: 64 * 1024, // 64KB\n};\n\nvar config = {\n  reset: function () {\n    Object.assign(this, DEFAULT_CONFIG);\n    if (!isElectron) {\n      this.execPath = process.execPath;\n    }\n  },\n  resetForTesting: function () {\n    this.reset();\n    this.silent = true;\n  },\n};\n\nconfig.reset();\nexports.config = config;\n\n// Note: commands should generally consider these as read-only values.\nvar state = {\n  error: null,\n  errorCode: 0,\n  currentCmd: 'shell.js',\n};\nexports.state = state;\n\ndelete process.env.OLDPWD; // initially, there's no previous directory\n\n// Reliably test if something is any sort of javascript object\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\nexports.isObject = isObject;\n\nfunction log() {\n  /* istanbul ignore next */\n  if (!config.silent) {\n    console.error.apply(console, arguments);\n  }\n}\nexports.log = log;\n\n// Converts strings to be equivalent across all platforms. Primarily responsible\n// for making sure we use '/' instead of '\\' as path separators, but this may be\n// expanded in the future if necessary\nfunction convertErrorOutput(msg) {\n  if (typeof msg !== 'string') {\n    throw new TypeError('input must be a string');\n  }\n  return msg.replace(/\\\\/g, '/');\n}\nexports.convertErrorOutput = convertErrorOutput;\n\n// Shows error message. Throws if config.fatal is true\nfunction error(msg, _code, options) {\n  // Validate input\n  if (typeof msg !== 'string') throw new Error('msg must be a string');\n\n  var DEFAULT_OPTIONS = {\n    continue: false,\n    code: 1,\n    prefix: state.currentCmd + ': ',\n    silent: false,\n  };\n\n  if (typeof _code === 'number' && isObject(options)) {\n    options.code = _code;\n  } else if (isObject(_code)) { // no 'code'\n    options = _code;\n  } else if (typeof _code === 'number') { // no 'options'\n    options = { code: _code };\n  } else if (typeof _code !== 'number') { // only 'msg'\n    options = {};\n  }\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  if (!state.errorCode) state.errorCode = options.code;\n\n  var logEntry = convertErrorOutput(options.prefix + msg);\n  state.error = state.error ? state.error + '\\n' : '';\n  state.error += logEntry;\n\n  // Throw an error, or log the entry\n  if (config.fatal) throw new Error(logEntry);\n  if (msg.length > 0 && !options.silent) log(logEntry);\n\n  if (!options.continue) {\n    throw {\n      msg: 'earlyExit',\n      retValue: (new ShellString('', state.error, state.errorCode)),\n    };\n  }\n}\nexports.error = error;\n\n//@\n//@ ### ShellString(str)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var foo = ShellString('hello world');\n//@ ```\n//@\n//@ Turns a regular string into a string-like object similar to what each\n//@ command returns. This has special methods, like `.to()` and `.toEnd()`.\nfunction ShellString(stdout, stderr, code) {\n  var that;\n  if (stdout instanceof Array) {\n    that = stdout;\n    that.stdout = stdout.join('\\n');\n    if (stdout.length > 0) that.stdout += '\\n';\n  } else {\n    that = new String(stdout);\n    that.stdout = stdout;\n  }\n  that.stderr = stderr;\n  that.code = code;\n  // A list of all commands that can appear on the right-hand side of a pipe\n  // (populated by calls to common.wrap())\n  pipeMethods.forEach(function (cmd) {\n    that[cmd] = shellMethods[cmd].bind(that);\n  });\n  return that;\n}\n\nexports.ShellString = ShellString;\n\n// Returns {'alice': true, 'bob': false} when passed a string and dictionary as follows:\n//   parseOptions('-a', {'a':'alice', 'b':'bob'});\n// Returns {'reference': 'string-value', 'bob': false} when passed two dictionaries of the form:\n//   parseOptions({'-r': 'string-value'}, {'r':'reference', 'b':'bob'});\n// Throws an error when passed a string that does not start with '-':\n//   parseOptions('a', {'a':'alice'}); // throws\nfunction parseOptions(opt, map, errorOptions) {\n  // Validate input\n  if (typeof opt !== 'string' && !isObject(opt)) {\n    throw new Error('options must be strings or key-value pairs');\n  } else if (!isObject(map)) {\n    throw new Error('parseOptions() internal error: map must be an object');\n  } else if (errorOptions && !isObject(errorOptions)) {\n    throw new Error('parseOptions() internal error: errorOptions must be object');\n  }\n\n  if (opt === '--') {\n    // This means there are no options.\n    return {};\n  }\n\n  // All options are false by default\n  var options = {};\n  Object.keys(map).forEach(function (letter) {\n    var optName = map[letter];\n    if (optName[0] !== '!') {\n      options[optName] = false;\n    }\n  });\n\n  if (opt === '') return options; // defaults\n\n  if (typeof opt === 'string') {\n    if (opt[0] !== '-') {\n      throw new Error(\"Options string must start with a '-'\");\n    }\n\n    // e.g. chars = ['R', 'f']\n    var chars = opt.slice(1).split('');\n\n    chars.forEach(function (c) {\n      if (c in map) {\n        var optionName = map[c];\n        if (optionName[0] === '!') {\n          options[optionName.slice(1)] = false;\n        } else {\n          options[optionName] = true;\n        }\n      } else {\n        error('option not recognized: ' + c, errorOptions || {});\n      }\n    });\n  } else { // opt is an Object\n    Object.keys(opt).forEach(function (key) {\n      // key is a string of the form '-r', '-d', etc.\n      var c = key[1];\n      if (c in map) {\n        var optionName = map[c];\n        options[optionName] = opt[key]; // assign the given value\n      } else {\n        error('option not recognized: ' + c, errorOptions || {});\n      }\n    });\n  }\n  return options;\n}\nexports.parseOptions = parseOptions;\n\n// Expands wildcards with matching (ie. existing) file names.\n// For example:\n//   expand(['file*.js']) = ['file1.js', 'file2.js', ...]\n//   (if the files 'file1.js', 'file2.js', etc, exist in the current dir)\nfunction expand(list) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('must be an array');\n  }\n  var expanded = [];\n  list.forEach(function (listEl) {\n    // Don't expand non-strings\n    if (typeof listEl !== 'string') {\n      expanded.push(listEl);\n    } else {\n      var ret;\n      try {\n        ret = glob.sync(listEl, config.globOptions);\n        // if nothing matched, interpret the string literally\n        ret = ret.length > 0 ? ret : [listEl];\n      } catch (e) {\n        // if glob fails, interpret the string literally\n        ret = [listEl];\n      }\n      expanded = expanded.concat(ret);\n    }\n  });\n  return expanded;\n}\nexports.expand = expand;\n\n// Normalizes Buffer creation, using Buffer.alloc if possible.\n// Also provides a good default buffer length for most use cases.\nvar buffer = typeof Buffer.alloc === 'function' ?\n  function (len) {\n    return Buffer.alloc(len || config.bufLength);\n  } :\n  function (len) {\n    return new Buffer(len || config.bufLength);\n  };\nexports.buffer = buffer;\n\n// Normalizes _unlinkSync() across platforms to match Unix behavior, i.e.\n// file can be unlinked even if it's read-only, see https://github.com/joyent/node/issues/3006\nfunction unlinkSync(file) {\n  try {\n    fs.unlinkSync(file);\n  } catch (e) {\n    // Try to override file permission\n    /* istanbul ignore next */\n    if (e.code === 'EPERM') {\n      fs.chmodSync(file, '0666');\n      fs.unlinkSync(file);\n    } else {\n      throw e;\n    }\n  }\n}\nexports.unlinkSync = unlinkSync;\n\n// wrappers around common.statFollowLinks and common.statNoFollowLinks that clarify intent\n// and improve readability\nfunction statFollowLinks() {\n  return fs.statSync.apply(fs, arguments);\n}\nexports.statFollowLinks = statFollowLinks;\n\nfunction statNoFollowLinks() {\n  return fs.lstatSync.apply(fs, arguments);\n}\nexports.statNoFollowLinks = statNoFollowLinks;\n\n// e.g. 'shelljs_a5f185d0443ca...'\nfunction randomFileName() {\n  function randomHash(count) {\n    if (count === 1) {\n      return parseInt(16 * Math.random(), 10).toString(16);\n    }\n    var hash = '';\n    for (var i = 0; i < count; i++) {\n      hash += randomHash(1);\n    }\n    return hash;\n  }\n\n  return 'shelljs_' + randomHash(20);\n}\nexports.randomFileName = randomFileName;\n\n// Common wrapper for all Unix-like commands that performs glob expansion,\n// command-logging, and other nice things\nfunction wrap(cmd, fn, options) {\n  options = options || {};\n  return function () {\n    var retValue = null;\n\n    state.currentCmd = cmd;\n    state.error = null;\n    state.errorCode = 0;\n\n    try {\n      var args = [].slice.call(arguments, 0);\n\n      // Log the command to stderr, if appropriate\n      if (config.verbose) {\n        console.error.apply(console, [cmd].concat(args));\n      }\n\n      // If this is coming from a pipe, let's set the pipedValue (otherwise, set\n      // it to the empty string)\n      state.pipedValue = (this && typeof this.stdout === 'string') ? this.stdout : '';\n\n      if (options.unix === false) { // this branch is for exec()\n        retValue = fn.apply(this, args);\n      } else { // and this branch is for everything else\n        if (isObject(args[0]) && args[0].constructor.name === 'Object') {\n          // a no-op, allowing the syntax `touch({'-r': file}, ...)`\n        } else if (args.length === 0 || typeof args[0] !== 'string' || args[0].length <= 1 || args[0][0] !== '-') {\n          args.unshift(''); // only add dummy option if '-option' not already present\n        }\n\n        // flatten out arrays that are arguments, to make the syntax:\n        //    `cp([file1, file2, file3], dest);`\n        // equivalent to:\n        //    `cp(file1, file2, file3, dest);`\n        args = args.reduce(function (accum, cur) {\n          if (Array.isArray(cur)) {\n            return accum.concat(cur);\n          }\n          accum.push(cur);\n          return accum;\n        }, []);\n\n        // Convert ShellStrings (basically just String objects) to regular strings\n        args = args.map(function (arg) {\n          if (isObject(arg) && arg.constructor.name === 'String') {\n            return arg.toString();\n          }\n          return arg;\n        });\n\n        // Expand the '~' if appropriate\n        var homeDir = os.homedir();\n        args = args.map(function (arg) {\n          if (typeof arg === 'string' && arg.slice(0, 2) === '~/' || arg === '~') {\n            return arg.replace(/^~/, homeDir);\n          }\n          return arg;\n        });\n\n        // Perform glob-expansion on all arguments after globStart, but preserve\n        // the arguments before it (like regexes for sed and grep)\n        if (!config.noglob && options.allowGlobbing === true) {\n          args = args.slice(0, options.globStart).concat(expand(args.slice(options.globStart)));\n        }\n\n        try {\n          // parse options if options are provided\n          if (isObject(options.cmdOptions)) {\n            args[0] = parseOptions(args[0], options.cmdOptions);\n          }\n\n          retValue = fn.apply(this, args);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (e.msg === 'earlyExit') {\n            retValue = e.retValue;\n          } else {\n            throw e; // this is probably a bug that should be thrown up the call stack\n          }\n        }\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      if (!state.error) {\n        // If state.error hasn't been set it's an error thrown by Node, not us - probably a bug...\n        e.name = 'ShellJSInternalError';\n        throw e;\n      }\n      if (config.fatal) throw e;\n    }\n\n    if (options.wrapOutput &&\n        (typeof retValue === 'string' || Array.isArray(retValue))) {\n      retValue = new ShellString(retValue, state.error, state.errorCode);\n    }\n\n    state.currentCmd = 'shell.js';\n    return retValue;\n  };\n} // wrap\nexports.wrap = wrap;\n\n// This returns all the input that is piped into the current command (or the\n// empty string, if this isn't on the right-hand side of a pipe\nfunction _readFromPipe() {\n  return state.pipedValue;\n}\nexports.readFromPipe = _readFromPipe;\n\nvar DEFAULT_WRAP_OPTIONS = {\n  allowGlobbing: true,\n  canReceivePipe: false,\n  cmdOptions: null,\n  globStart: 1,\n  pipeOnly: false,\n  wrapOutput: true,\n  unix: true,\n};\n\n// This is populated during plugin registration\nvar pipeMethods = [];\n\n// Register a new ShellJS command\nfunction _register(name, implementation, wrapOptions) {\n  wrapOptions = wrapOptions || {};\n\n  // Validate options\n  Object.keys(wrapOptions).forEach(function (option) {\n    if (!DEFAULT_WRAP_OPTIONS.hasOwnProperty(option)) {\n      throw new Error(\"Unknown option '\" + option + \"'\");\n    }\n    if (typeof wrapOptions[option] !== typeof DEFAULT_WRAP_OPTIONS[option]) {\n      throw new TypeError(\"Unsupported type '\" + typeof wrapOptions[option] +\n        \"' for option '\" + option + \"'\");\n    }\n  });\n\n  // If an option isn't specified, use the default\n  wrapOptions = Object.assign({}, DEFAULT_WRAP_OPTIONS, wrapOptions);\n\n  if (shell.hasOwnProperty(name)) {\n    throw new Error('Command `' + name + '` already exists');\n  }\n\n  if (wrapOptions.pipeOnly) {\n    wrapOptions.canReceivePipe = true;\n    shellMethods[name] = wrap(name, implementation, wrapOptions);\n  } else {\n    shell[name] = wrap(name, implementation, wrapOptions);\n  }\n\n  if (wrapOptions.canReceivePipe) {\n    pipeMethods.push(name);\n  }\n}\nexports.register = _register;\n","module.exports = require(\"vscode\");","module.exports = require(\"util\");","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n","module.exports = require(\"os\");","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nconst path = (() => { try { return require('path') } catch (e) {}})() || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nconst GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nconst expand = require('brace-expansion')\n\nconst plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nconst reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nconst slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  const t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = options => {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nconst MAX_PATTERN_LENGTH = 1024 * 64\nconst assertValidPattern = pattern => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nconst SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = false\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/': /* istanbul ignore next */ {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","var os = require('os');\nvar common = require('./common');\n\ncommon.register('cd', _cd, {});\n\n//@\n//@ ### cd([dir])\n//@\n//@ Changes to directory `dir` for the duration of the script. Changes to home\n//@ directory if no argument is supplied.\nfunction _cd(options, dir) {\n  if (!dir) dir = os.homedir();\n\n  if (dir === '-') {\n    if (!process.env.OLDPWD) {\n      common.error('could not find previous directory');\n    } else {\n      dir = process.env.OLDPWD;\n    }\n  }\n\n  try {\n    var curDir = process.cwd();\n    process.chdir(dir);\n    process.env.OLDPWD = curDir;\n  } catch (e) {\n    // something went wrong, let's figure out the error\n    var err;\n    try {\n      common.statFollowLinks(dir); // if this succeeds, it must be some sort of file\n      err = 'not a directory: ' + dir;\n    } catch (e2) {\n      err = 'no such file or directory: ' + dir;\n    }\n    if (err) common.error(err);\n  }\n  return '';\n}\nmodule.exports = _cd;\n","var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\n\ncommon.register('cp', _cp, {\n  cmdOptions: {\n    'f': '!no_force',\n    'n': 'no_force',\n    'u': 'update',\n    'R': 'recursive',\n    'r': 'recursive',\n    'L': 'followsymlink',\n    'P': 'noFollowsymlink',\n  },\n  wrapOutput: false,\n});\n\n// Buffered file copy, synchronous\n// (Using readFileSync() + writeFileSync() could easily cause a memory overflow\n//  with large files)\nfunction copyFileSync(srcFile, destFile, options) {\n  if (!fs.existsSync(srcFile)) {\n    common.error('copyFileSync: no such file or directory: ' + srcFile);\n  }\n\n  var isWindows = process.platform === 'win32';\n\n  // Check the mtimes of the files if the '-u' flag is provided\n  try {\n    if (options.update && common.statFollowLinks(srcFile).mtime < fs.statSync(destFile).mtime) {\n      return;\n    }\n  } catch (e) {\n    // If we're here, destFile probably doesn't exist, so just do a normal copy\n  }\n\n  if (common.statNoFollowLinks(srcFile).isSymbolicLink() && !options.followsymlink) {\n    try {\n      common.statNoFollowLinks(destFile);\n      common.unlinkSync(destFile); // re-link it\n    } catch (e) {\n      // it doesn't exist, so no work needs to be done\n    }\n\n    var symlinkFull = fs.readlinkSync(srcFile);\n    fs.symlinkSync(symlinkFull, destFile, isWindows ? 'junction' : null);\n  } else {\n    var buf = common.buffer();\n    var bufLength = buf.length;\n    var bytesRead = bufLength;\n    var pos = 0;\n    var fdr = null;\n    var fdw = null;\n\n    try {\n      fdr = fs.openSync(srcFile, 'r');\n    } catch (e) {\n      /* istanbul ignore next */\n      common.error('copyFileSync: could not read src file (' + srcFile + ')');\n    }\n\n    try {\n      fdw = fs.openSync(destFile, 'w');\n    } catch (e) {\n      /* istanbul ignore next */\n      common.error('copyFileSync: could not write to dest file (code=' + e.code + '):' + destFile);\n    }\n\n    while (bytesRead === bufLength) {\n      bytesRead = fs.readSync(fdr, buf, 0, bufLength, pos);\n      fs.writeSync(fdw, buf, 0, bytesRead);\n      pos += bytesRead;\n    }\n\n    fs.closeSync(fdr);\n    fs.closeSync(fdw);\n\n    fs.chmodSync(destFile, common.statFollowLinks(srcFile).mode);\n  }\n}\n\n// Recursively copies 'sourceDir' into 'destDir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction cpdirSyncRecursive(sourceDir, destDir, currentDepth, opts) {\n  if (!opts) opts = {};\n\n  // Ensure there is not a run away recursive copy\n  if (currentDepth >= common.config.maxdepth) return;\n  currentDepth++;\n\n  var isWindows = process.platform === 'win32';\n\n  // Create the directory where all our junk is moving to; read the mode of the\n  // source directory and mirror it\n  try {\n    fs.mkdirSync(destDir);\n  } catch (e) {\n    // if the directory already exists, that's okay\n    if (e.code !== 'EEXIST') throw e;\n  }\n\n  var files = fs.readdirSync(sourceDir);\n\n  for (var i = 0; i < files.length; i++) {\n    var srcFile = sourceDir + '/' + files[i];\n    var destFile = destDir + '/' + files[i];\n    var srcFileStat = common.statNoFollowLinks(srcFile);\n\n    var symlinkFull;\n    if (opts.followsymlink) {\n      if (cpcheckcycle(sourceDir, srcFile)) {\n        // Cycle link found.\n        console.error('Cycle link found.');\n        symlinkFull = fs.readlinkSync(srcFile);\n        fs.symlinkSync(symlinkFull, destFile, isWindows ? 'junction' : null);\n        continue;\n      }\n    }\n    if (srcFileStat.isDirectory()) {\n      /* recursion this thing right on back. */\n      cpdirSyncRecursive(srcFile, destFile, currentDepth, opts);\n    } else if (srcFileStat.isSymbolicLink() && !opts.followsymlink) {\n      symlinkFull = fs.readlinkSync(srcFile);\n      try {\n        common.statNoFollowLinks(destFile);\n        common.unlinkSync(destFile); // re-link it\n      } catch (e) {\n        // it doesn't exist, so no work needs to be done\n      }\n      fs.symlinkSync(symlinkFull, destFile, isWindows ? 'junction' : null);\n    } else if (srcFileStat.isSymbolicLink() && opts.followsymlink) {\n      srcFileStat = common.statFollowLinks(srcFile);\n      if (srcFileStat.isDirectory()) {\n        cpdirSyncRecursive(srcFile, destFile, currentDepth, opts);\n      } else {\n        copyFileSync(srcFile, destFile, opts);\n      }\n    } else {\n      /* At this point, we've hit a file actually worth copying... so copy it on over. */\n      if (fs.existsSync(destFile) && opts.no_force) {\n        common.log('skipping existing file: ' + files[i]);\n      } else {\n        copyFileSync(srcFile, destFile, opts);\n      }\n    }\n  } // for files\n\n  // finally change the mode for the newly created directory (otherwise, we\n  // couldn't add files to a read-only directory).\n  var checkDir = common.statFollowLinks(sourceDir);\n  fs.chmodSync(destDir, checkDir.mode);\n} // cpdirSyncRecursive\n\n// Checks if cureent file was created recently\nfunction checkRecentCreated(sources, index) {\n  var lookedSource = sources[index];\n  return sources.slice(0, index).some(function (src) {\n    return path.basename(src) === path.basename(lookedSource);\n  });\n}\n\nfunction cpcheckcycle(sourceDir, srcFile) {\n  var srcFileStat = common.statNoFollowLinks(srcFile);\n  if (srcFileStat.isSymbolicLink()) {\n    // Do cycle check. For example:\n    //   $ mkdir -p 1/2/3/4\n    //   $ cd  1/2/3/4\n    //   $ ln -s ../../3 link\n    //   $ cd ../../../..\n    //   $ cp -RL 1 copy\n    var cyclecheck = common.statFollowLinks(srcFile);\n    if (cyclecheck.isDirectory()) {\n      var sourcerealpath = fs.realpathSync(sourceDir);\n      var symlinkrealpath = fs.realpathSync(srcFile);\n      var re = new RegExp(symlinkrealpath);\n      if (re.test(sourcerealpath)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//@\n//@ ### cp([options,] source [, source ...], dest)\n//@ ### cp([options,] source_array, dest)\n//@\n//@ Available options:\n//@\n//@ + `-f`: force (default behavior)\n//@ + `-n`: no-clobber\n//@ + `-u`: only copy if `source` is newer than `dest`\n//@ + `-r`, `-R`: recursive\n//@ + `-L`: follow symlinks\n//@ + `-P`: don't follow symlinks\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cp('file1', 'dir1');\n//@ cp('-R', 'path/to/dir/', '~/newCopy/');\n//@ cp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\n//@ cp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\n//@ ```\n//@\n//@ Copies files.\nfunction _cp(options, sources, dest) {\n  // If we're missing -R, it actually implies -L (unless -P is explicit)\n  if (options.followsymlink) {\n    options.noFollowsymlink = false;\n  }\n  if (!options.recursive && !options.noFollowsymlink) {\n    options.followsymlink = true;\n  }\n\n  // Get sources, dest\n  if (arguments.length < 3) {\n    common.error('missing <source> and/or <dest>');\n  } else {\n    sources = [].slice.call(arguments, 1, arguments.length - 1);\n    dest = arguments[arguments.length - 1];\n  }\n\n  var destExists = fs.existsSync(dest);\n  var destStat = destExists && common.statFollowLinks(dest);\n\n  // Dest is not existing dir, but multiple sources given\n  if ((!destExists || !destStat.isDirectory()) && sources.length > 1) {\n    common.error('dest is not a directory (too many sources)');\n  }\n\n  // Dest is an existing file, but -n is given\n  if (destExists && destStat.isFile() && options.no_force) {\n    return new common.ShellString('', '', 0);\n  }\n\n  sources.forEach(function (src, srcIndex) {\n    if (!fs.existsSync(src)) {\n      if (src === '') src = \"''\"; // if src was empty string, display empty string\n      common.error('no such file or directory: ' + src, { continue: true });\n      return; // skip file\n    }\n    var srcStat = common.statFollowLinks(src);\n    if (!options.noFollowsymlink && srcStat.isDirectory()) {\n      if (!options.recursive) {\n        // Non-Recursive\n        common.error(\"omitting directory '\" + src + \"'\", { continue: true });\n      } else {\n        // Recursive\n        // 'cp /a/source dest' should create 'source' in 'dest'\n        var newDest = (destStat && destStat.isDirectory()) ?\n            path.join(dest, path.basename(src)) :\n            dest;\n\n        try {\n          common.statFollowLinks(path.dirname(dest));\n          cpdirSyncRecursive(src, newDest, 0, { no_force: options.no_force, followsymlink: options.followsymlink });\n        } catch (e) {\n          /* istanbul ignore next */\n          common.error(\"cannot create directory '\" + dest + \"': No such file or directory\");\n        }\n      }\n    } else {\n      // If here, src is a file\n\n      // When copying to '/path/dir':\n      //    thisDest = '/path/dir/file1'\n      var thisDest = dest;\n      if (destStat && destStat.isDirectory()) {\n        thisDest = path.normalize(dest + '/' + path.basename(src));\n      }\n\n      var thisDestExists = fs.existsSync(thisDest);\n      if (thisDestExists && checkRecentCreated(sources, srcIndex)) {\n        // cannot overwrite file created recently in current execution, but we want to continue copying other files\n        if (!options.no_force) {\n          common.error(\"will not overwrite just-created '\" + thisDest + \"' with '\" + src + \"'\", { continue: true });\n        }\n        return;\n      }\n\n      if (thisDestExists && options.no_force) {\n        return; // skip file\n      }\n\n      if (path.relative(src, thisDest) === '') {\n        // a file cannot be copied to itself, but we want to continue copying other files\n        common.error(\"'\" + thisDest + \"' and '\" + src + \"' are the same file\", { continue: true });\n        return;\n      }\n\n      copyFileSync(src, thisDest, options);\n    }\n  }); // forEach(src)\n\n  return new common.ShellString('', common.state.error, common.state.errorCode);\n}\nmodule.exports = _cp;\n","var common = require('./common');\n\n//@\n//@ ### error()\n//@\n//@ Tests if error occurred in the last command. Returns a truthy value if an\n//@ error returned, or a falsy value otherwise.\n//@\n//@ **Note**: do not rely on the\n//@ return value to be an error message. If you need the last error message, use\n//@ the `.stderr` attribute from the last command's return value instead.\nfunction error() {\n  return common.state.error;\n}\nmodule.exports = error;\n","var common = require('./common');\nvar os = require('os');\nvar fs = require('fs');\n\ncommon.register('tempdir', _tempDir, {\n  allowGlobbing: false,\n  wrapOutput: false,\n});\n\n// Returns false if 'dir' is not a writeable directory, 'dir' otherwise\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir)) return false;\n\n  if (!common.statFollowLinks(dir).isDirectory()) return false;\n\n  var testFile = dir + '/' + common.randomFileName();\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    /* istanbul ignore next */\n    return false;\n  }\n}\n\n// Variable to cache the tempdir value for successive lookups.\nvar cachedTempDir;\n\n//@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\nfunction _tempDir() {\n  if (cachedTempDir) return cachedTempDir;\n\n  cachedTempDir = writeableDir(os.tmpdir()) ||\n                  writeableDir(process.env.TMPDIR) ||\n                  writeableDir(process.env.TEMP) ||\n                  writeableDir(process.env.TMP) ||\n                  writeableDir(process.env.Wimp$ScrapDir) || // RiscOS\n                  writeableDir('C:\\\\TEMP') || // Windows\n                  writeableDir('C:\\\\TMP') || // Windows\n                  writeableDir('\\\\TEMP') || // Windows\n                  writeableDir('\\\\TMP') || // Windows\n                  writeableDir('/tmp') ||\n                  writeableDir('/var/tmp') ||\n                  writeableDir('/usr/tmp') ||\n                  writeableDir('.'); // last resort\n\n  return cachedTempDir;\n}\n\n// Indicates if the tempdir value is currently cached. This is exposed for tests\n// only. The return value should only be tested for truthiness.\nfunction isCached() {\n  return cachedTempDir;\n}\n\n// Clears the cached tempDir value, if one is cached. This is exposed for tests\n// only.\nfunction clearCache() {\n  cachedTempDir = undefined;\n}\n\nmodule.exports.tempDir = _tempDir;\nmodule.exports.isCached = isCached;\nmodule.exports.clearCache = clearCache;\n","var path = require('path');\nvar common = require('./common');\n\ncommon.register('pwd', _pwd, {\n  allowGlobbing: false,\n});\n\n//@\n//@ ### pwd()\n//@\n//@ Returns the current directory.\nfunction _pwd() {\n  var pwd = path.resolve(process.cwd());\n  return pwd;\n}\nmodule.exports = _pwd;\n","var path = require('path');\nvar fs = require('fs');\nvar common = require('./common');\nvar glob = require('glob');\n\nvar globPatternRecursive = path.sep + '**';\n\ncommon.register('ls', _ls, {\n  cmdOptions: {\n    'R': 'recursive',\n    'A': 'all',\n    'L': 'link',\n    'a': 'all_deprecated',\n    'd': 'directory',\n    'l': 'long',\n  },\n});\n\n//@\n//@ ### ls([options,] [path, ...])\n//@ ### ls([options,] path_array)\n//@\n//@ Available options:\n//@\n//@ + `-R`: recursive\n//@ + `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n//@ + `-L`: follow symlinks\n//@ + `-d`: list directories themselves, not their contents\n//@ + `-l`: list objects representing each file, each with fields containing `ls\n//@         -l` output fields. See\n//@         [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats)\n//@         for more info\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ls('projs/*.js');\n//@ ls('-R', '/users/me', '/tmp');\n//@ ls('-R', ['/users/me', '/tmp']); // same as above\n//@ ls('-l', 'file.txt'); // { name: 'file.txt', mode: 33188, nlink: 1, ...}\n//@ ```\n//@\n//@ Returns array of files in the given `path`, or files in\n//@ the current directory if no `path` is  provided.\nfunction _ls(options, paths) {\n  if (options.all_deprecated) {\n    // We won't support the -a option as it's hard to image why it's useful\n    // (it includes '.' and '..' in addition to '.*' files)\n    // For backwards compatibility we'll dump a deprecated message and proceed as before\n    common.log('ls: Option -a is deprecated. Use -A instead');\n    options.all = true;\n  }\n\n  if (!paths) {\n    paths = ['.'];\n  } else {\n    paths = [].slice.call(arguments, 1);\n  }\n\n  var list = [];\n\n  function pushFile(abs, relName, stat) {\n    if (process.platform === 'win32') {\n      relName = relName.replace(/\\\\/g, '/');\n    }\n    if (options.long) {\n      stat = stat || (options.link ? common.statFollowLinks(abs) : common.statNoFollowLinks(abs));\n      list.push(addLsAttributes(relName, stat));\n    } else {\n      // list.push(path.relative(rel || '.', file));\n      list.push(relName);\n    }\n  }\n\n  paths.forEach(function (p) {\n    var stat;\n\n    try {\n      stat = options.link ? common.statFollowLinks(p) : common.statNoFollowLinks(p);\n      // follow links to directories by default\n      if (stat.isSymbolicLink()) {\n        /* istanbul ignore next */\n        // workaround for https://github.com/shelljs/shelljs/issues/795\n        // codecov seems to have a bug that miscalculate this block as uncovered.\n        // but according to nyc report this block does get covered.\n        try {\n          var _stat = common.statFollowLinks(p);\n          if (_stat.isDirectory()) {\n            stat = _stat;\n          }\n        } catch (_) {} // bad symlink, treat it like a file\n      }\n    } catch (e) {\n      common.error('no such file or directory: ' + p, 2, { continue: true });\n      return;\n    }\n\n    // If the stat succeeded\n    if (stat.isDirectory() && !options.directory) {\n      if (options.recursive) {\n        // use glob, because it's simple\n        glob.sync(p + globPatternRecursive, { dot: options.all, follow: options.link })\n          .forEach(function (item) {\n            // Glob pattern returns the directory itself and needs to be filtered out.\n            if (path.relative(p, item)) {\n              pushFile(item, path.relative(p, item));\n            }\n          });\n      } else if (options.all) {\n        // use fs.readdirSync, because it's fast\n        fs.readdirSync(p).forEach(function (item) {\n          pushFile(path.join(p, item), item);\n        });\n      } else {\n        // use fs.readdirSync and then filter out secret files\n        fs.readdirSync(p).forEach(function (item) {\n          if (item[0] !== '.') {\n            pushFile(path.join(p, item), item);\n          }\n        });\n      }\n    } else {\n      pushFile(p, p, stat);\n    }\n  });\n\n  // Add methods, to make this more compatible with ShellStrings\n  return list;\n}\n\nfunction addLsAttributes(pathName, stats) {\n  // Note: this object will contain more information than .toString() returns\n  stats.name = pathName;\n  stats.toString = function () {\n    // Return a string resembling unix's `ls -l` format\n    return [this.mode, this.nlink, this.uid, this.gid, this.size, this.mtime, this.name].join(' ');\n  };\n  return stats;\n}\n\nmodule.exports = _ls;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('rm', _rm, {\n  cmdOptions: {\n    'f': 'force',\n    'r': 'recursive',\n    'R': 'recursive',\n  },\n});\n\n// Recursively removes 'dir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction rmdirSyncRecursive(dir, force, fromSymlink) {\n  var files;\n\n  files = fs.readdirSync(dir);\n\n  // Loop through and delete everything in the sub-tree after checking it\n  for (var i = 0; i < files.length; i++) {\n    var file = dir + '/' + files[i];\n    var currFile = common.statNoFollowLinks(file);\n\n    if (currFile.isDirectory()) { // Recursive function back to the beginning\n      rmdirSyncRecursive(file, force);\n    } else { // Assume it's a file - perhaps a try/catch belongs here?\n      if (force || isWriteable(file)) {\n        try {\n          common.unlinkSync(file);\n        } catch (e) {\n          /* istanbul ignore next */\n          common.error('could not remove file (code ' + e.code + '): ' + file, {\n            continue: true,\n          });\n        }\n      }\n    }\n  }\n\n  // if was directory was referenced through a symbolic link,\n  // the contents should be removed, but not the directory itself\n  if (fromSymlink) return;\n\n  // Now that we know everything in the sub-tree has been deleted, we can delete the main directory.\n  // Huzzah for the shopkeep.\n\n  var result;\n  try {\n    // Retry on windows, sometimes it takes a little time before all the files in the directory are gone\n    var start = Date.now();\n\n    // TODO: replace this with a finite loop\n    for (;;) {\n      try {\n        result = fs.rmdirSync(dir);\n        if (fs.existsSync(dir)) throw { code: 'EAGAIN' };\n        break;\n      } catch (er) {\n        /* istanbul ignore next */\n        // In addition to error codes, also check if the directory still exists and loop again if true\n        if (process.platform === 'win32' && (er.code === 'ENOTEMPTY' || er.code === 'EBUSY' || er.code === 'EPERM' || er.code === 'EAGAIN')) {\n          if (Date.now() - start > 1000) throw er;\n        } else if (er.code === 'ENOENT') {\n          // Directory did not exist, deletion was successful\n          break;\n        } else {\n          throw er;\n        }\n      }\n    }\n  } catch (e) {\n    common.error('could not remove directory (code ' + e.code + '): ' + dir, { continue: true });\n  }\n\n  return result;\n} // rmdirSyncRecursive\n\n// Hack to determine if file has write permissions for current user\n// Avoids having to check user, group, etc, but it's probably slow\nfunction isWriteable(file) {\n  var writePermission = true;\n  try {\n    var __fd = fs.openSync(file, 'a');\n    fs.closeSync(__fd);\n  } catch (e) {\n    writePermission = false;\n  }\n\n  return writePermission;\n}\n\nfunction handleFile(file, options) {\n  if (options.force || isWriteable(file)) {\n    // -f was passed, or file is writable, so it can be removed\n    common.unlinkSync(file);\n  } else {\n    common.error('permission denied: ' + file, { continue: true });\n  }\n}\n\nfunction handleDirectory(file, options) {\n  if (options.recursive) {\n    // -r was passed, so directory can be removed\n    rmdirSyncRecursive(file, options.force);\n  } else {\n    common.error('path is a directory', { continue: true });\n  }\n}\n\nfunction handleSymbolicLink(file, options) {\n  var stats;\n  try {\n    stats = common.statFollowLinks(file);\n  } catch (e) {\n    // symlink is broken, so remove the symlink itself\n    common.unlinkSync(file);\n    return;\n  }\n\n  if (stats.isFile()) {\n    common.unlinkSync(file);\n  } else if (stats.isDirectory()) {\n    if (file[file.length - 1] === '/') {\n      // trailing separator, so remove the contents, not the link\n      if (options.recursive) {\n        // -r was passed, so directory can be removed\n        var fromSymlink = true;\n        rmdirSyncRecursive(file, options.force, fromSymlink);\n      } else {\n        common.error('path is a directory', { continue: true });\n      }\n    } else {\n      // no trailing separator, so remove the link\n      common.unlinkSync(file);\n    }\n  }\n}\n\nfunction handleFIFO(file) {\n  common.unlinkSync(file);\n}\n\n//@\n//@ ### rm([options,] file [, file ...])\n//@ ### rm([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-f`: force\n//@ + `-r, -R`: recursive\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ rm('-rf', '/tmp/*');\n//@ rm('some_file.txt', 'another_file.txt');\n//@ rm(['some_file.txt', 'another_file.txt']); // same as above\n//@ ```\n//@\n//@ Removes files.\nfunction _rm(options, files) {\n  if (!files) common.error('no paths given');\n\n  // Convert to array\n  files = [].slice.call(arguments, 1);\n\n  files.forEach(function (file) {\n    var lstats;\n    try {\n      var filepath = (file[file.length - 1] === '/')\n        ? file.slice(0, -1) // remove the '/' so lstatSync can detect symlinks\n        : file;\n      lstats = common.statNoFollowLinks(filepath); // test for existence\n    } catch (e) {\n      // Path does not exist, no force flag given\n      if (!options.force) {\n        common.error('no such file or directory: ' + file, { continue: true });\n      }\n      return; // skip file\n    }\n\n    // If here, path exists\n    if (lstats.isFile()) {\n      handleFile(file, options);\n    } else if (lstats.isDirectory()) {\n      handleDirectory(file, options);\n    } else if (lstats.isSymbolicLink()) {\n      handleSymbolicLink(file, options);\n    } else if (lstats.isFIFO()) {\n      handleFIFO(file);\n    }\n  }); // forEach(file)\n  return '';\n} // rm\nmodule.exports = _rm;\n","//\n// ShellJS\n// Unix shell commands on top of Node's API\n//\n// Copyright (c) 2012 Artur Adib\n// http://github.com/shelljs/shelljs\n//\n\nvar common = require('./src/common');\n\n//@\n//@ All commands run synchronously, unless otherwise stated.\n//@ All commands accept standard bash globbing characters (`*`, `?`, etc.),\n//@ compatible with the [node `glob` module](https://github.com/isaacs/node-glob).\n//@\n//@ For less-commonly used commands and features, please check out our [wiki\n//@ page](https://github.com/shelljs/shelljs/wiki).\n//@\n\n// Include the docs for all the default commands\n//@commands\n\n// Load all default commands\nrequire('./commands').forEach(function (command) {\n  require('./src/' + command);\n});\n\n//@\n//@ ### exit(code)\n//@\n//@ Exits the current process with the given exit `code`.\nexports.exit = process.exit;\n\n//@include ./src/error\nexports.error = require('./src/error');\n\n//@include ./src/common\nexports.ShellString = common.ShellString;\n\n//@\n//@ ### env['VAR_NAME']\n//@\n//@ Object containing environment variables (both getter and setter). Shortcut\n//@ to `process.env`.\nexports.env = process.env;\n\n//@\n//@ ### Pipes\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ grep('foo', 'file1.txt', 'file2.txt').sed(/o/g, 'a').to('output.txt');\n//@ echo('files with o\\'s in the name:\\n' + ls().grep('o'));\n//@ cat('test.js').exec('node'); // pipe to exec() call\n//@ ```\n//@\n//@ Commands can send their output to another command in a pipe-like fashion.\n//@ `sed`, `grep`, `cat`, `exec`, `to`, and `toEnd` can appear on the right-hand\n//@ side of a pipe. Pipes can be chained.\n\n//@\n//@ ## Configuration\n//@\n\nexports.config = common.config;\n\n//@\n//@ ### config.silent\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ var sh = require('shelljs');\n//@ var silentState = sh.config.silent; // save old silent state\n//@ sh.config.silent = true;\n//@ /* ... */\n//@ sh.config.silent = silentState; // restore old silent state\n//@ ```\n//@\n//@ Suppresses all command output if `true`, except for `echo()` calls.\n//@ Default is `false`.\n\n//@\n//@ ### config.fatal\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ require('shelljs/global');\n//@ config.fatal = true; // or set('-e');\n//@ cp('this_file_does_not_exist', '/dev/null'); // throws Error here\n//@ /* more commands... */\n//@ ```\n//@\n//@ If `true`, the script will throw a Javascript error when any shell.js\n//@ command encounters an error. Default is `false`. This is analogous to\n//@ Bash's `set -e`.\n\n//@\n//@ ### config.verbose\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ config.verbose = true; // or set('-v');\n//@ cd('dir/');\n//@ rm('-rf', 'foo.txt', 'bar.txt');\n//@ exec('echo hello');\n//@ ```\n//@\n//@ Will print each command as follows:\n//@\n//@ ```\n//@ cd dir/\n//@ rm -rf foo.txt bar.txt\n//@ exec echo hello\n//@ ```\n\n//@\n//@ ### config.globOptions\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ config.globOptions = {nodir: true};\n//@ ```\n//@\n//@ Use this value for calls to `glob.sync()` instead of the default options.\n\n//@\n//@ ### config.reset()\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ var shell = require('shelljs');\n//@ // Make changes to shell.config, and do stuff...\n//@ /* ... */\n//@ shell.config.reset(); // reset to original state\n//@ // Do more stuff, but with original settings\n//@ /* ... */\n//@ ```\n//@\n//@ Reset `shell.config` to the defaults:\n//@\n//@ ```javascript\n//@ {\n//@   fatal: false,\n//@   globOptions: {},\n//@   maxdepth: 255,\n//@   noglob: false,\n//@   silent: false,\n//@   verbose: false,\n//@ }\n//@ ```\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","module.exports = require(\"assert\");","exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('cat', _cat, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'number',\n  },\n});\n\n//@\n//@ ### cat([options,] file [, file ...])\n//@ ### cat([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n`: number all output lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = cat('file*.txt');\n//@ var str = cat('file1', 'file2');\n//@ var str = cat(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Returns a string containing the given file, or a concatenated string\n//@ containing the files if more than one file is given (a new line character is\n//@ introduced between each file).\nfunction _cat(options, files) {\n  var cat = common.readFromPipe();\n\n  if (!files && !cat) common.error('no paths given');\n\n  files = [].slice.call(arguments, 1);\n\n  files.forEach(function (file) {\n    if (!fs.existsSync(file)) {\n      common.error('no such file or directory: ' + file);\n    } else if (common.statFollowLinks(file).isDirectory()) {\n      common.error(file + ': Is a directory');\n    }\n\n    cat += fs.readFileSync(file, 'utf8');\n  });\n\n  if (options.number) {\n    cat = addNumbers(cat);\n  }\n\n  return cat;\n}\nmodule.exports = _cat;\n\nfunction addNumbers(cat) {\n  var lines = cat.split('\\n');\n  var lastLine = lines.pop();\n\n  lines = lines.map(function (line, i) {\n    return numberedLine(i + 1, line);\n  });\n\n  if (lastLine.length) {\n    lastLine = numberedLine(lines.length + 1, lastLine);\n  }\n  lines.push(lastLine);\n\n  return lines.join('\\n');\n}\n\nfunction numberedLine(n, line) {\n  // GNU cat use six pad start number + tab. See http://lingrok.org/xref/coreutils/src/cat.c#57\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\n  var number = ('     ' + n).slice(-6) + '\\t';\n  return number + line;\n}\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\nvar PERMS = (function (base) {\n  return {\n    OTHER_EXEC: base.EXEC,\n    OTHER_WRITE: base.WRITE,\n    OTHER_READ: base.READ,\n\n    GROUP_EXEC: base.EXEC << 3,\n    GROUP_WRITE: base.WRITE << 3,\n    GROUP_READ: base.READ << 3,\n\n    OWNER_EXEC: base.EXEC << 6,\n    OWNER_WRITE: base.WRITE << 6,\n    OWNER_READ: base.READ << 6,\n\n    // Literal octal numbers are apparently not allowed in \"strict\" javascript.\n    STICKY: parseInt('01000', 8),\n    SETGID: parseInt('02000', 8),\n    SETUID: parseInt('04000', 8),\n\n    TYPE_MASK: parseInt('0770000', 8),\n  };\n}({\n  EXEC: 1,\n  WRITE: 2,\n  READ: 4,\n}));\n\ncommon.register('chmod', _chmod, {\n});\n\n//@\n//@ ### chmod([options,] octal_mode || octal_string, file)\n//@ ### chmod([options,] symbolic_mode, file)\n//@\n//@ Available options:\n//@\n//@ + `-v`: output a diagnostic for every file processed//@\n//@ + `-c`: like verbose, but report only when a change is made//@\n//@ + `-R`: change files and directories recursively//@\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ chmod(755, '/Users/brandon');\n//@ chmod('755', '/Users/brandon'); // same as above\n//@ chmod('u+x', '/Users/brandon');\n//@ chmod('-R', 'a-w', '/Users/brandon');\n//@ ```\n//@\n//@ Alters the permissions of a file or directory by either specifying the\n//@ absolute permissions in octal form or expressing the changes in symbols.\n//@ This command tries to mimic the POSIX behavior as much as possible.\n//@ Notable exceptions:\n//@\n//@ + In symbolic modes, `a-r` and `-r` are identical.  No consideration is\n//@   given to the `umask`.\n//@ + There is no \"quiet\" option, since default behavior is to run silent.\nfunction _chmod(options, mode, filePattern) {\n  if (!filePattern) {\n    if (options.length > 0 && options.charAt(0) === '-') {\n      // Special case where the specified file permissions started with - to subtract perms, which\n      // get picked up by the option parser as command flags.\n      // If we are down by one argument and options starts with -, shift everything over.\n      [].unshift.call(arguments, '');\n    } else {\n      common.error('You must specify a file.');\n    }\n  }\n\n  options = common.parseOptions(options, {\n    'R': 'recursive',\n    'c': 'changes',\n    'v': 'verbose',\n  });\n\n  filePattern = [].slice.call(arguments, 2);\n\n  var files;\n\n  // TODO: replace this with a call to common.expand()\n  if (options.recursive) {\n    files = [];\n    filePattern.forEach(function addFile(expandedFile) {\n      var stat = common.statNoFollowLinks(expandedFile);\n\n      if (!stat.isSymbolicLink()) {\n        files.push(expandedFile);\n\n        if (stat.isDirectory()) {  // intentionally does not follow symlinks.\n          fs.readdirSync(expandedFile).forEach(function (child) {\n            addFile(expandedFile + '/' + child);\n          });\n        }\n      }\n    });\n  } else {\n    files = filePattern;\n  }\n\n  files.forEach(function innerChmod(file) {\n    file = path.resolve(file);\n    if (!fs.existsSync(file)) {\n      common.error('File not found: ' + file);\n    }\n\n    // When recursing, don't follow symlinks.\n    if (options.recursive && common.statNoFollowLinks(file).isSymbolicLink()) {\n      return;\n    }\n\n    var stat = common.statFollowLinks(file);\n    var isDir = stat.isDirectory();\n    var perms = stat.mode;\n    var type = perms & PERMS.TYPE_MASK;\n\n    var newPerms = perms;\n\n    if (isNaN(parseInt(mode, 8))) {\n      // parse options\n      mode.split(',').forEach(function (symbolicMode) {\n        var pattern = /([ugoa]*)([=\\+-])([rwxXst]*)/i;\n        var matches = pattern.exec(symbolicMode);\n\n        if (matches) {\n          var applyTo = matches[1];\n          var operator = matches[2];\n          var change = matches[3];\n\n          var changeOwner = applyTo.indexOf('u') !== -1 || applyTo === 'a' || applyTo === '';\n          var changeGroup = applyTo.indexOf('g') !== -1 || applyTo === 'a' || applyTo === '';\n          var changeOther = applyTo.indexOf('o') !== -1 || applyTo === 'a' || applyTo === '';\n\n          var changeRead = change.indexOf('r') !== -1;\n          var changeWrite = change.indexOf('w') !== -1;\n          var changeExec = change.indexOf('x') !== -1;\n          var changeExecDir = change.indexOf('X') !== -1;\n          var changeSticky = change.indexOf('t') !== -1;\n          var changeSetuid = change.indexOf('s') !== -1;\n\n          if (changeExecDir && isDir) {\n            changeExec = true;\n          }\n\n          var mask = 0;\n          if (changeOwner) {\n            mask |= (changeRead ? PERMS.OWNER_READ : 0) + (changeWrite ? PERMS.OWNER_WRITE : 0) + (changeExec ? PERMS.OWNER_EXEC : 0) + (changeSetuid ? PERMS.SETUID : 0);\n          }\n          if (changeGroup) {\n            mask |= (changeRead ? PERMS.GROUP_READ : 0) + (changeWrite ? PERMS.GROUP_WRITE : 0) + (changeExec ? PERMS.GROUP_EXEC : 0) + (changeSetuid ? PERMS.SETGID : 0);\n          }\n          if (changeOther) {\n            mask |= (changeRead ? PERMS.OTHER_READ : 0) + (changeWrite ? PERMS.OTHER_WRITE : 0) + (changeExec ? PERMS.OTHER_EXEC : 0);\n          }\n\n          // Sticky bit is special - it's not tied to user, group or other.\n          if (changeSticky) {\n            mask |= PERMS.STICKY;\n          }\n\n          switch (operator) {\n            case '+':\n              newPerms |= mask;\n              break;\n\n            case '-':\n              newPerms &= ~mask;\n              break;\n\n            case '=':\n              newPerms = type + mask;\n\n              // According to POSIX, when using = to explicitly set the\n              // permissions, setuid and setgid can never be cleared.\n              if (common.statFollowLinks(file).isDirectory()) {\n                newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n              }\n              break;\n            default:\n              common.error('Could not recognize operator: `' + operator + '`');\n          }\n\n          if (options.verbose) {\n            console.log(file + ' -> ' + newPerms.toString(8));\n          }\n\n          if (perms !== newPerms) {\n            if (!options.verbose && options.changes) {\n              console.log(file + ' -> ' + newPerms.toString(8));\n            }\n            fs.chmodSync(file, newPerms);\n            perms = newPerms; // for the next round of changes!\n          }\n        } else {\n          common.error('Invalid symbolic mode change: ' + symbolicMode);\n        }\n      });\n    } else {\n      // they gave us a full number\n      newPerms = type + parseInt(mode, 8);\n\n      // POSIX rules are that setuid and setgid can only be added using numeric\n      // form, but not cleared.\n      if (common.statFollowLinks(file).isDirectory()) {\n        newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n      }\n\n      fs.chmodSync(file, newPerms);\n    }\n  });\n  return '';\n}\nmodule.exports = _chmod;\n","var common = require('./common');\nvar _cd = require('./cd');\nvar path = require('path');\n\ncommon.register('dirs', _dirs, {\n  wrapOutput: false,\n});\ncommon.register('pushd', _pushd, {\n  wrapOutput: false,\n});\ncommon.register('popd', _popd, {\n  wrapOutput: false,\n});\n\n// Pushd/popd/dirs internals\nvar _dirStack = [];\n\nfunction _isStackIndex(index) {\n  return (/^[\\-+]\\d+$/).test(index);\n}\n\nfunction _parseStackIndex(index) {\n  if (_isStackIndex(index)) {\n    if (Math.abs(index) < _dirStack.length + 1) { // +1 for pwd\n      return (/^-/).test(index) ? Number(index) - 1 : Number(index);\n    }\n    common.error(index + ': directory stack index out of range');\n  } else {\n    common.error(index + ': invalid number');\n  }\n}\n\nfunction _actualDirStack() {\n  return [process.cwd()].concat(_dirStack);\n}\n\n//@\n//@ ### pushd([options,] [dir | '-N' | '+N'])\n//@\n//@ Available options:\n//@\n//@ + `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n//@ + `-q`: Supresses output to the console.\n//@\n//@ Arguments:\n//@\n//@ + `dir`: Sets the current working directory to the top of the stack, then executes the equivalent of `cd dir`.\n//@ + `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n//@ + `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ // process.cwd() === '/usr'\n//@ pushd('/etc'); // Returns /etc /usr\n//@ pushd('+1');   // Returns /usr /etc\n//@ ```\n//@\n//@ Save the current directory on the top of the directory stack and then `cd` to `dir`. With no arguments, `pushd` exchanges the top two directories. Returns an array of paths in the stack.\nfunction _pushd(options, dir) {\n  if (_isStackIndex(options)) {\n    dir = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'n': 'no-cd',\n    'q': 'quiet',\n  });\n\n  var dirs = _actualDirStack();\n\n  if (dir === '+0') {\n    return dirs; // +0 is a noop\n  } else if (!dir) {\n    if (dirs.length > 1) {\n      dirs = dirs.splice(1, 1).concat(dirs);\n    } else {\n      return common.error('no other directory');\n    }\n  } else if (_isStackIndex(dir)) {\n    var n = _parseStackIndex(dir);\n    dirs = dirs.slice(n).concat(dirs.slice(0, n));\n  } else {\n    if (options['no-cd']) {\n      dirs.splice(1, 0, dir);\n    } else {\n      dirs.unshift(dir);\n    }\n  }\n\n  if (options['no-cd']) {\n    dirs = dirs.slice(1);\n  } else {\n    dir = path.resolve(dirs.shift());\n    _cd('', dir);\n  }\n\n  _dirStack = dirs;\n  return _dirs(options.quiet ? '-q' : '');\n}\nexports.pushd = _pushd;\n\n//@\n//@\n//@ ### popd([options,] ['-N' | '+N'])\n//@\n//@ Available options:\n//@\n//@ + `-n`: Suppress the normal directory change when removing directories from the stack, so that only the stack is manipulated.\n//@ + `-q`: Supresses output to the console.\n//@\n//@ Arguments:\n//@\n//@ + `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n//@ + `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo(process.cwd()); // '/usr'\n//@ pushd('/etc');       // '/etc /usr'\n//@ echo(process.cwd()); // '/etc'\n//@ popd();              // '/usr'\n//@ echo(process.cwd()); // '/usr'\n//@ ```\n//@\n//@ When no arguments are given, `popd` removes the top directory from the stack and performs a `cd` to the new top directory. The elements are numbered from 0, starting at the first directory listed with dirs (i.e., `popd` is equivalent to `popd +0`). Returns an array of paths in the stack.\nfunction _popd(options, index) {\n  if (_isStackIndex(options)) {\n    index = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'n': 'no-cd',\n    'q': 'quiet',\n  });\n\n  if (!_dirStack.length) {\n    return common.error('directory stack empty');\n  }\n\n  index = _parseStackIndex(index || '+0');\n\n  if (options['no-cd'] || index > 0 || _dirStack.length + index === 0) {\n    index = index > 0 ? index - 1 : index;\n    _dirStack.splice(index, 1);\n  } else {\n    var dir = path.resolve(_dirStack.shift());\n    _cd('', dir);\n  }\n\n  return _dirs(options.quiet ? '-q' : '');\n}\nexports.popd = _popd;\n\n//@\n//@\n//@ ### dirs([options | '+N' | '-N'])\n//@\n//@ Available options:\n//@\n//@ + `-c`: Clears the directory stack by deleting all of the elements.\n//@ + `-q`: Supresses output to the console.\n//@\n//@ Arguments:\n//@\n//@ + `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n//@ + `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n//@\n//@ Display the list of currently remembered directories. Returns an array of paths in the stack, or a single path if `+N` or `-N` was specified.\n//@\n//@ See also: `pushd`, `popd`\nfunction _dirs(options, index) {\n  if (_isStackIndex(options)) {\n    index = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'c': 'clear',\n    'q': 'quiet',\n  });\n\n  if (options.clear) {\n    _dirStack = [];\n    return _dirStack;\n  }\n\n  var stack = _actualDirStack();\n\n  if (index) {\n    index = _parseStackIndex(index);\n\n    if (index < 0) {\n      index = stack.length + index;\n    }\n\n    if (!options.quiet) {\n      common.log(stack[index]);\n    }\n    return stack[index];\n  }\n\n  if (!options.quiet) {\n    common.log(stack.join(' '));\n  }\n\n  return stack;\n}\nexports.dirs = _dirs;\n","var format = require('util').format;\n\nvar common = require('./common');\n\ncommon.register('echo', _echo, {\n  allowGlobbing: false,\n});\n\n//@\n//@ ### echo([options,] string [, string ...])\n//@\n//@ Available options:\n//@\n//@ + `-e`: interpret backslash escapes (default)\n//@ + `-n`: remove trailing newline from output\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo('hello world');\n//@ var str = echo('hello world');\n//@ echo('-n', 'no newline at end');\n//@ ```\n//@\n//@ Prints `string` to stdout, and returns string with additional utility methods\n//@ like `.to()`.\nfunction _echo(opts) {\n  // allow strings starting with '-', see issue #20\n  var messages = [].slice.call(arguments, opts ? 0 : 1);\n  var options = {};\n\n  // If the first argument starts with '-', parse it as options string.\n  // If parseOptions throws, it wasn't an options string.\n  try {\n    options = common.parseOptions(messages[0], {\n      'e': 'escapes',\n      'n': 'no_newline',\n    }, {\n      silent: true,\n    });\n\n    // Allow null to be echoed\n    if (messages[0]) {\n      messages.shift();\n    }\n  } catch (_) {\n    // Clear out error if an error occurred\n    common.state.error = null;\n  }\n\n  var output = format.apply(null, messages);\n\n  // Add newline if -n is not passed.\n  if (!options.no_newline) {\n    output += '\\n';\n  }\n\n  process.stdout.write(output);\n\n  return output;\n}\n\nmodule.exports = _echo;\n","var common = require('./common');\nvar _tempDir = require('./tempdir').tempDir;\nvar _pwd = require('./pwd');\nvar path = require('path');\nvar fs = require('fs');\nvar child = require('child_process');\n\nvar DEFAULT_MAXBUFFER_SIZE = 20 * 1024 * 1024;\nvar DEFAULT_ERROR_CODE = 1;\n\ncommon.register('exec', _exec, {\n  unix: false,\n  canReceivePipe: true,\n  wrapOutput: false,\n});\n\n// We use this function to run `exec` synchronously while also providing realtime\n// output.\nfunction execSync(cmd, opts, pipe) {\n  if (!common.config.execPath) {\n    common.error('Unable to find a path to the node binary. Please manually set config.execPath');\n  }\n\n  var tempDir = _tempDir();\n  var paramsFile = path.resolve(tempDir + '/' + common.randomFileName());\n  var stderrFile = path.resolve(tempDir + '/' + common.randomFileName());\n  var stdoutFile = path.resolve(tempDir + '/' + common.randomFileName());\n\n  opts = common.extend({\n    silent: common.config.silent,\n    cwd: _pwd().toString(),\n    env: process.env,\n    maxBuffer: DEFAULT_MAXBUFFER_SIZE,\n    encoding: 'utf8',\n  }, opts);\n\n  if (fs.existsSync(paramsFile)) common.unlinkSync(paramsFile);\n  if (fs.existsSync(stderrFile)) common.unlinkSync(stderrFile);\n  if (fs.existsSync(stdoutFile)) common.unlinkSync(stdoutFile);\n\n  opts.cwd = path.resolve(opts.cwd);\n\n  var paramsToSerialize = {\n    command: cmd,\n    execOptions: opts,\n    pipe: pipe,\n    stdoutFile: stdoutFile,\n    stderrFile: stderrFile,\n  };\n\n  // Create the files and ensure these are locked down (for read and write) to\n  // the current user. The main concerns here are:\n  //\n  // * If we execute a command which prints sensitive output, then\n  //   stdoutFile/stderrFile must not be readable by other users.\n  // * paramsFile must not be readable by other users, or else they can read it\n  //   to figure out the path for stdoutFile/stderrFile and create these first\n  //   (locked down to their own access), which will crash exec() when it tries\n  //   to write to the files.\n  function writeFileLockedDown(filePath, data) {\n    fs.writeFileSync(filePath, data, {\n      encoding: 'utf8',\n      mode: parseInt('600', 8),\n    });\n  }\n  writeFileLockedDown(stdoutFile, '');\n  writeFileLockedDown(stderrFile, '');\n  writeFileLockedDown(paramsFile, JSON.stringify(paramsToSerialize));\n\n  var execArgs = [\n    path.join(__dirname, 'exec-child.js'),\n    paramsFile,\n  ];\n\n  /* istanbul ignore else */\n  if (opts.silent) {\n    opts.stdio = 'ignore';\n  } else {\n    opts.stdio = [0, 1, 2];\n  }\n\n  var code = 0;\n\n  // Welcome to the future\n  try {\n    // Bad things if we pass in a `shell` option to child_process.execFileSync,\n    // so we need to explicitly remove it here.\n    delete opts.shell;\n\n    child.execFileSync(common.config.execPath, execArgs, opts);\n  } catch (e) {\n    // Commands with non-zero exit code raise an exception.\n    code = e.status || DEFAULT_ERROR_CODE;\n  }\n\n  // fs.readFileSync uses buffer encoding by default, so call\n  // it without the encoding option if the encoding is 'buffer'.\n  // Also, if the exec timeout is too short for node to start up,\n  // the files will not be created, so these calls will throw.\n  var stdout = '';\n  var stderr = '';\n  if (opts.encoding === 'buffer') {\n    stdout = fs.readFileSync(stdoutFile);\n    stderr = fs.readFileSync(stderrFile);\n  } else {\n    stdout = fs.readFileSync(stdoutFile, opts.encoding);\n    stderr = fs.readFileSync(stderrFile, opts.encoding);\n  }\n\n  // No biggie if we can't erase the files now -- they're in a temp dir anyway\n  // and we locked down permissions (see the note above).\n  try { common.unlinkSync(paramsFile); } catch (e) {}\n  try { common.unlinkSync(stderrFile); } catch (e) {}\n  try { common.unlinkSync(stdoutFile); } catch (e) {}\n\n  if (code !== 0) {\n    // Note: `silent` should be unconditionally true to avoid double-printing\n    // the command's stderr, and to avoid printing any stderr when the user has\n    // set `shell.config.silent`.\n    common.error(stderr, code, { continue: true, silent: true });\n  }\n  var obj = common.ShellString(stdout, stderr, code);\n  return obj;\n} // execSync()\n\n// Wrapper around exec() to enable echoing output to console in real time\nfunction execAsync(cmd, opts, pipe, callback) {\n  opts = common.extend({\n    silent: common.config.silent,\n    cwd: _pwd().toString(),\n    env: process.env,\n    maxBuffer: DEFAULT_MAXBUFFER_SIZE,\n    encoding: 'utf8',\n  }, opts);\n\n  var c = child.exec(cmd, opts, function (err, stdout, stderr) {\n    if (callback) {\n      if (!err) {\n        callback(0, stdout, stderr);\n      } else if (err.code === undefined) {\n        // See issue #536\n        /* istanbul ignore next */\n        callback(1, stdout, stderr);\n      } else {\n        callback(err.code, stdout, stderr);\n      }\n    }\n  });\n\n  if (pipe) c.stdin.end(pipe);\n\n  if (!opts.silent) {\n    c.stdout.pipe(process.stdout);\n    c.stderr.pipe(process.stderr);\n  }\n\n  return c;\n}\n\n//@\n//@ ### exec(command [, options] [, callback])\n//@\n//@ Available options:\n//@\n//@ + `async`: Asynchronous execution. If a callback is provided, it will be set to\n//@   `true`, regardless of the passed value (default: `false`).\n//@ + `silent`: Do not echo program output to console (default: `false`).\n//@ + `encoding`: Character encoding to use. Affects the values returned to stdout and stderr, and\n//@   what is written to stdout and stderr when not in silent mode (default: `'utf8'`).\n//@ + and any option available to Node.js's\n//@   [`child_process.exec()`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var version = exec('node --version', {silent:true}).stdout;\n//@\n//@ var child = exec('some_long_running_process', {async:true});\n//@ child.stdout.on('data', function(data) {\n//@   /* ... do something with data ... */\n//@ });\n//@\n//@ exec('some_long_running_process', function(code, stdout, stderr) {\n//@   console.log('Exit code:', code);\n//@   console.log('Program output:', stdout);\n//@   console.log('Program stderr:', stderr);\n//@ });\n//@ ```\n//@\n//@ Executes the given `command` _synchronously_, unless otherwise specified.  When in synchronous\n//@ mode, this returns a `ShellString` (compatible with ShellJS v0.6.x, which returns an object\n//@ of the form `{ code:..., stdout:... , stderr:... }`). Otherwise, this returns the child process\n//@ object, and the `callback` receives the arguments `(code, stdout, stderr)`.\n//@\n//@ Not seeing the behavior you want? `exec()` runs everything through `sh`\n//@ by default (or `cmd.exe` on Windows), which differs from `bash`. If you\n//@ need bash-specific behavior, try out the `{shell: 'path/to/bash'}` option.\nfunction _exec(command, options, callback) {\n  options = options || {};\n  if (!command) common.error('must specify command');\n\n  var pipe = common.readFromPipe();\n\n  // Callback is defined instead of options.\n  if (typeof options === 'function') {\n    callback = options;\n    options = { async: true };\n  }\n\n  // Callback is defined with options.\n  if (typeof options === 'object' && typeof callback === 'function') {\n    options.async = true;\n  }\n\n  options = common.extend({\n    silent: common.config.silent,\n    async: false,\n  }, options);\n\n  if (options.async) {\n    return execAsync(command, options, pipe, callback);\n  } else {\n    return execSync(command, options, pipe);\n  }\n}\nmodule.exports = _exec;\n","module.exports = require(\"child_process\");","if (require.main !== module) {\n  throw new Error('This file should not be required');\n}\n\nvar childProcess = require('child_process');\nvar fs = require('fs');\n\nvar paramFilePath = process.argv[2];\n\nvar serializedParams = fs.readFileSync(paramFilePath, 'utf8');\nvar params = JSON.parse(serializedParams);\n\nvar cmd = params.command;\nvar execOptions = params.execOptions;\nvar pipe = params.pipe;\nvar stdoutFile = params.stdoutFile;\nvar stderrFile = params.stderrFile;\n\nvar c = childProcess.exec(cmd, execOptions, function (err) {\n  if (!err) {\n    process.exitCode = 0;\n  } else if (err.code === undefined) {\n    process.exitCode = 1;\n  } else {\n    process.exitCode = err.code;\n  }\n});\n\nvar stdoutStream = fs.createWriteStream(stdoutFile);\nvar stderrStream = fs.createWriteStream(stderrFile);\n\nc.stdout.pipe(stdoutStream);\nc.stderr.pipe(stderrStream);\nc.stdout.pipe(process.stdout);\nc.stderr.pipe(process.stderr);\n\nif (pipe) {\n  c.stdin.end(pipe);\n}\n","var path = require('path');\nvar common = require('./common');\nvar _ls = require('./ls');\n\ncommon.register('find', _find, {});\n\n//@\n//@ ### find(path [, path ...])\n//@ ### find(path_array)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ find('src', 'lib');\n//@ find(['src', 'lib']); // same as above\n//@ find('.').filter(function(file) { return file.match(/\\.js$/); });\n//@ ```\n//@\n//@ Returns array of all files (however deep) in the given paths.\n//@\n//@ The main difference from `ls('-R', path)` is that the resulting file names\n//@ include the base directories (e.g., `lib/resources/file1` instead of just `file1`).\nfunction _find(options, paths) {\n  if (!paths) {\n    common.error('no path specified');\n  } else if (typeof paths === 'string') {\n    paths = [].slice.call(arguments, 1);\n  }\n\n  var list = [];\n\n  function pushFile(file) {\n    if (process.platform === 'win32') {\n      file = file.replace(/\\\\/g, '/');\n    }\n    list.push(file);\n  }\n\n  // why not simply do `ls('-R', paths)`? because the output wouldn't give the base dirs\n  // to get the base dir in the output, we need instead `ls('-R', 'dir/*')` for every directory\n\n  paths.forEach(function (file) {\n    var stat;\n    try {\n      stat = common.statFollowLinks(file);\n    } catch (e) {\n      common.error('no such file or directory: ' + file);\n    }\n\n    pushFile(file);\n\n    if (stat.isDirectory()) {\n      _ls({ recursive: true, all: true }, file).forEach(function (subfile) {\n        pushFile(path.join(file, subfile));\n      });\n    }\n  });\n\n  return list;\n}\nmodule.exports = _find;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('grep', _grep, {\n  globStart: 2, // don't glob-expand the regex\n  canReceivePipe: true,\n  cmdOptions: {\n    'v': 'inverse',\n    'l': 'nameOnly',\n    'i': 'ignoreCase',\n  },\n});\n\n//@\n//@ ### grep([options,] regex_filter, file [, file ...])\n//@ ### grep([options,] regex_filter, file_array)\n//@\n//@ Available options:\n//@\n//@ + `-v`: Invert `regex_filter` (only print non-matching lines).\n//@ + `-l`: Print only filenames of matching files.\n//@ + `-i`: Ignore case.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ grep('-v', 'GLOBAL_VARIABLE', '*.js');\n//@ grep('GLOBAL_VARIABLE', '*.js');\n//@ ```\n//@\n//@ Reads input string from given files and returns a string containing all lines of the\n//@ file that match the given `regex_filter`.\nfunction _grep(options, regex, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given', 2);\n\n  files = [].slice.call(arguments, 2);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var grep = [];\n  if (options.ignoreCase) {\n    regex = new RegExp(regex, 'i');\n  }\n  files.forEach(function (file) {\n    if (!fs.existsSync(file) && file !== '-') {\n      common.error('no such file or directory: ' + file, 2, { continue: true });\n      return;\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    if (options.nameOnly) {\n      if (contents.match(regex)) {\n        grep.push(file);\n      }\n    } else {\n      var lines = contents.split('\\n');\n      lines.forEach(function (line) {\n        var matched = line.match(regex);\n        if ((options.inverse && !matched) || (!options.inverse && matched)) {\n          grep.push(line);\n        }\n      });\n    }\n  });\n\n  return grep.join('\\n') + '\\n';\n}\nmodule.exports = _grep;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('head', _head, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n// Reads |numLines| lines or the entire file, whichever is less.\nfunction readSomeLines(file, numLines) {\n  var buf = common.buffer();\n  var bufLength = buf.length;\n  var bytesRead = bufLength;\n  var pos = 0;\n\n  var fdr = fs.openSync(file, 'r');\n  var numLinesRead = 0;\n  var ret = '';\n  while (bytesRead === bufLength && numLinesRead < numLines) {\n    bytesRead = fs.readSync(fdr, buf, 0, bufLength, pos);\n    var bufStr = buf.toString('utf8', 0, bytesRead);\n    numLinesRead += bufStr.split('\\n').length - 1;\n    ret += bufStr;\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  return ret;\n}\n\n//@\n//@ ### head([{'-n': \\<num\\>},] file [, file ...])\n//@ ### head([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the first `<num>` lines of the files\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = head({'-n': 1}, 'file*.txt');\n//@ var str = head('file1', 'file2');\n//@ var str = head(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the start of a file.\nfunction _head(options, files) {\n  var head = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents;\n    if (file === '-') {\n      contents = pipe;\n    } else if (options.numLines < 0) {\n      contents = fs.readFileSync(file, 'utf8');\n    } else {\n      contents = readSomeLines(file, options.numLines);\n    }\n\n    var lines = contents.split('\\n');\n    var hasTrailingNewline = (lines[lines.length - 1] === '');\n    if (hasTrailingNewline) {\n      lines.pop();\n    }\n    shouldAppendNewline = (hasTrailingNewline || options.numLines < lines.length);\n\n    head = head.concat(lines.slice(0, options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    head.push(''); // to add a trailing newline once we join\n  }\n  return head.join('\\n');\n}\nmodule.exports = _head;\n","var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\n\ncommon.register('ln', _ln, {\n  cmdOptions: {\n    's': 'symlink',\n    'f': 'force',\n  },\n});\n\n//@\n//@ ### ln([options,] source, dest)\n//@\n//@ Available options:\n//@\n//@ + `-s`: symlink\n//@ + `-f`: force\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ln('file', 'newlink');\n//@ ln('-sf', 'file', 'existing');\n//@ ```\n//@\n//@ Links `source` to `dest`. Use `-f` to force the link, should `dest` already exist.\nfunction _ln(options, source, dest) {\n  if (!source || !dest) {\n    common.error('Missing <source> and/or <dest>');\n  }\n\n  source = String(source);\n  var sourcePath = path.normalize(source).replace(RegExp(path.sep + '$'), '');\n  var isAbsolute = (path.resolve(source) === sourcePath);\n  dest = path.resolve(process.cwd(), String(dest));\n\n  if (fs.existsSync(dest)) {\n    if (!options.force) {\n      common.error('Destination file exists', { continue: true });\n    }\n\n    fs.unlinkSync(dest);\n  }\n\n  if (options.symlink) {\n    var isWindows = process.platform === 'win32';\n    var linkType = isWindows ? 'file' : null;\n    var resolvedSourcePath = isAbsolute ? sourcePath : path.resolve(process.cwd(), path.dirname(dest), source);\n    if (!fs.existsSync(resolvedSourcePath)) {\n      common.error('Source file does not exist', { continue: true });\n    } else if (isWindows && common.statFollowLinks(resolvedSourcePath).isDirectory()) {\n      linkType = 'junction';\n    }\n\n    try {\n      fs.symlinkSync(linkType === 'junction' ? resolvedSourcePath : source, dest, linkType);\n    } catch (err) {\n      common.error(err.message);\n    }\n  } else {\n    if (!fs.existsSync(source)) {\n      common.error('Source file does not exist', { continue: true });\n    }\n    try {\n      fs.linkSync(source, dest);\n    } catch (err) {\n      common.error(err.message);\n    }\n  }\n  return '';\n}\nmodule.exports = _ln;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('mkdir', _mkdir, {\n  cmdOptions: {\n    'p': 'fullpath',\n  },\n});\n\n// Recursively creates `dir`\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir);\n\n  // Prevents some potential problems arising from malformed UNCs or\n  // insufficient permissions.\n  /* istanbul ignore next */\n  if (baseDir === dir) {\n    common.error('dirname() failed: [' + dir + ']');\n  }\n\n  // Base dir exists, no recursion necessary\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  }\n\n  // Base dir does not exist, go recursive\n  mkdirSyncRecursive(baseDir);\n\n  // Base dir created, can create dir\n  fs.mkdirSync(dir, parseInt('0777', 8));\n}\n\n//@\n//@ ### mkdir([options,] dir [, dir ...])\n//@ ### mkdir([options,] dir_array)\n//@\n//@ Available options:\n//@\n//@ + `-p`: full path (and create intermediate directories, if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\nfunction _mkdir(options, dirs) {\n  if (!dirs) common.error('no paths given');\n\n  if (typeof dirs === 'string') {\n    dirs = [].slice.call(arguments, 1);\n  }\n  // if it's array leave it as it is\n\n  dirs.forEach(function (dir) {\n    try {\n      var stat = common.statNoFollowLinks(dir);\n      if (!options.fullpath) {\n        common.error('path already exists: ' + dir, { continue: true });\n      } else if (stat.isFile()) {\n        common.error('cannot create directory ' + dir + ': File exists', { continue: true });\n      }\n      return; // skip dir\n    } catch (e) {\n      // do nothing\n    }\n\n    // Base dir does not exist, and no -p option given\n    var baseDir = path.dirname(dir);\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, { continue: true });\n      return; // skip dir\n    }\n\n    try {\n      if (options.fullpath) {\n        mkdirSyncRecursive(path.resolve(dir));\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n      }\n    } catch (e) {\n      var reason;\n      if (e.code === 'EACCES') {\n        reason = 'Permission denied';\n      } else if (e.code === 'ENOTDIR' || e.code === 'ENOENT') {\n        reason = 'Not a directory';\n      } else {\n        /* istanbul ignore next */\n        throw e;\n      }\n      common.error('cannot create directory ' + dir + ': ' + reason, { continue: true });\n    }\n  });\n  return '';\n} // mkdir\nmodule.exports = _mkdir;\n","var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\nvar cp = require('./cp');\nvar rm = require('./rm');\n\ncommon.register('mv', _mv, {\n  cmdOptions: {\n    'f': '!no_force',\n    'n': 'no_force',\n  },\n});\n\n// Checks if cureent file was created recently\nfunction checkRecentCreated(sources, index) {\n  var lookedSource = sources[index];\n  return sources.slice(0, index).some(function (src) {\n    return path.basename(src) === path.basename(lookedSource);\n  });\n}\n\n//@\n//@ ### mv([options ,] source [, source ...], dest')\n//@ ### mv([options ,] source_array, dest')\n//@\n//@ Available options:\n//@\n//@ + `-f`: force (default behavior)\n//@ + `-n`: no-clobber\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mv('-n', 'file', 'dir/');\n//@ mv('file1', 'file2', 'dir/');\n//@ mv(['file1', 'file2'], 'dir/'); // same as above\n//@ ```\n//@\n//@ Moves `source` file(s) to `dest`.\nfunction _mv(options, sources, dest) {\n  // Get sources, dest\n  if (arguments.length < 3) {\n    common.error('missing <source> and/or <dest>');\n  } else if (arguments.length > 3) {\n    sources = [].slice.call(arguments, 1, arguments.length - 1);\n    dest = arguments[arguments.length - 1];\n  } else if (typeof sources === 'string') {\n    sources = [sources];\n  } else {\n    // TODO(nate): figure out if we actually need this line\n    common.error('invalid arguments');\n  }\n\n  var exists = fs.existsSync(dest);\n  var stats = exists && common.statFollowLinks(dest);\n\n  // Dest is not existing dir, but multiple sources given\n  if ((!exists || !stats.isDirectory()) && sources.length > 1) {\n    common.error('dest is not a directory (too many sources)');\n  }\n\n  // Dest is an existing file, but no -f given\n  if (exists && stats.isFile() && options.no_force) {\n    common.error('dest file already exists: ' + dest);\n  }\n\n  sources.forEach(function (src, srcIndex) {\n    if (!fs.existsSync(src)) {\n      common.error('no such file or directory: ' + src, { continue: true });\n      return; // skip file\n    }\n\n    // If here, src exists\n\n    // When copying to '/path/dir':\n    //    thisDest = '/path/dir/file1'\n    var thisDest = dest;\n    if (fs.existsSync(dest) && common.statFollowLinks(dest).isDirectory()) {\n      thisDest = path.normalize(dest + '/' + path.basename(src));\n    }\n\n    var thisDestExists = fs.existsSync(thisDest);\n\n    if (thisDestExists && checkRecentCreated(sources, srcIndex)) {\n      // cannot overwrite file created recently in current execution, but we want to continue copying other files\n      if (!options.no_force) {\n        common.error(\"will not overwrite just-created '\" + thisDest + \"' with '\" + src + \"'\", { continue: true });\n      }\n      return;\n    }\n\n    if (fs.existsSync(thisDest) && options.no_force) {\n      common.error('dest file already exists: ' + thisDest, { continue: true });\n      return; // skip file\n    }\n\n    if (path.resolve(src) === path.dirname(path.resolve(thisDest))) {\n      common.error('cannot move to self: ' + src, { continue: true });\n      return; // skip file\n    }\n\n    try {\n      fs.renameSync(src, thisDest);\n    } catch (e) {\n      /* istanbul ignore next */\n      if (e.code === 'EXDEV') {\n        // If we're trying to `mv` to an external partition, we'll actually need\n        // to perform a copy and then clean up the original file. If either the\n        // copy or the rm fails with an exception, we should allow this\n        // exception to pass up to the top level.\n        cp('-r', src, thisDest);\n        rm('-rf', src);\n      }\n    }\n  }); // forEach(src)\n  return '';\n} // mv\nmodule.exports = _mv;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('sed', _sed, {\n  globStart: 3, // don't glob-expand regexes\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'inplace',\n  },\n});\n\n//@\n//@ ### sed([options,] search_regex, replacement, file [, file ...])\n//@ ### sed([options,] search_regex, replacement, file_array)\n//@\n//@ Available options:\n//@\n//@ + `-i`: Replace contents of `file` in-place. _Note that no backups will be created!_\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\n//@ sed(/.*DELETE_THIS_LINE.*\\n/, '', 'source.js');\n//@ ```\n//@\n//@ Reads an input string from `file`s, and performs a JavaScript `replace()` on the input\n//@ using the given `search_regex` and `replacement` string or function. Returns the new string after replacement.\n//@\n//@ Note:\n//@\n//@ Like unix `sed`, ShellJS `sed` supports capture groups. Capture groups are specified\n//@ using the `$n` syntax:\n//@\n//@ ```javascript\n//@ sed(/(\\w+)\\s(\\w+)/, '$2, $1', 'file.txt');\n//@ ```\nfunction _sed(options, regex, replacement, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (typeof replacement !== 'string' && typeof replacement !== 'function') {\n    if (typeof replacement === 'number') {\n      replacement = replacement.toString(); // fallback\n    } else {\n      common.error('invalid replacement string');\n    }\n  }\n\n  // Convert all search strings to RegExp\n  if (typeof regex === 'string') {\n    regex = RegExp(regex);\n  }\n\n  if (!files && !pipe) {\n    common.error('no files given');\n  }\n\n  files = [].slice.call(arguments, 3);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var sed = [];\n  files.forEach(function (file) {\n    if (!fs.existsSync(file) && file !== '-') {\n      common.error('no such file or directory: ' + file, 2, { continue: true });\n      return;\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    var lines = contents.split('\\n');\n    var result = lines.map(function (line) {\n      return line.replace(regex, replacement);\n    }).join('\\n');\n\n    sed.push(result);\n\n    if (options.inplace) {\n      fs.writeFileSync(file, result, 'utf8');\n    }\n  });\n\n  return sed.join('\\n');\n}\nmodule.exports = _sed;\n","var common = require('./common');\n\ncommon.register('set', _set, {\n  allowGlobbing: false,\n  wrapOutput: false,\n});\n\n//@\n//@ ### set(options)\n//@\n//@ Available options:\n//@\n//@ + `+/-e`: exit upon error (`config.fatal`)\n//@ + `+/-v`: verbose: show all commands (`config.verbose`)\n//@ + `+/-f`: disable filename expansion (globbing)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ set('-e'); // exit upon first error\n//@ set('+e'); // this undoes a \"set('-e')\"\n//@ ```\n//@\n//@ Sets global configuration variables.\nfunction _set(options) {\n  if (!options) {\n    var args = [].slice.call(arguments, 0);\n    if (args.length < 2) common.error('must provide an argument');\n    options = args[1];\n  }\n  var negate = (options[0] === '+');\n  if (negate) {\n    options = '-' + options.slice(1); // parseOptions needs a '-' prefix\n  }\n  options = common.parseOptions(options, {\n    'e': 'fatal',\n    'v': 'verbose',\n    'f': 'noglob',\n  });\n\n  if (negate) {\n    Object.keys(options).forEach(function (key) {\n      options[key] = !options[key];\n    });\n  }\n\n  Object.keys(options).forEach(function (key) {\n    // Only change the global config if `negate` is false and the option is true\n    // or if `negate` is true and the option is false (aka negate !== option)\n    if (negate !== options[key]) {\n      common.config[key] = options[key];\n    }\n  });\n  return;\n}\nmodule.exports = _set;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('sort', _sort, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'r': 'reverse',\n    'n': 'numerical',\n  },\n});\n\n// parse out the number prefix of a line\nfunction parseNumber(str) {\n  var match = str.match(/^\\s*(\\d*)\\s*(.*)$/);\n  return { num: Number(match[1]), value: match[2] };\n}\n\n// compare two strings case-insensitively, but examine case for strings that are\n// case-insensitive equivalent\nfunction unixCmp(a, b) {\n  var aLower = a.toLowerCase();\n  var bLower = b.toLowerCase();\n  return (aLower === bLower ?\n      -1 * a.localeCompare(b) : // unix sort treats case opposite how javascript does\n      aLower.localeCompare(bLower));\n}\n\n// compare two strings in the fashion that unix sort's -n option works\nfunction numericalCmp(a, b) {\n  var objA = parseNumber(a);\n  var objB = parseNumber(b);\n  if (objA.hasOwnProperty('num') && objB.hasOwnProperty('num')) {\n    return ((objA.num !== objB.num) ?\n        (objA.num - objB.num) :\n        unixCmp(objA.value, objB.value));\n  } else {\n    return unixCmp(objA.value, objB.value);\n  }\n}\n\n//@\n//@ ### sort([options,] file [, file ...])\n//@ ### sort([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-r`: Reverse the results\n//@ + `-n`: Compare according to numerical value\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sort('foo.txt', 'bar.txt');\n//@ sort('-r', 'foo.txt');\n//@ ```\n//@\n//@ Return the contents of the `file`s, sorted line-by-line. Sorting multiple\n//@ files mixes their content (just as unix `sort` does).\nfunction _sort(options, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no files given');\n\n  files = [].slice.call(arguments, 1);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var lines = files.reduce(function (accum, file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return accum;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error('read failed: ' + file + ': Is a directory', {\n          continue: true,\n        });\n        return accum;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    return accum.concat(contents.trimRight().split('\\n'));\n  }, []);\n\n  var sorted = lines.sort(options.numerical ? numericalCmp : unixCmp);\n\n  if (options.reverse) {\n    sorted = sorted.reverse();\n  }\n\n  return sorted.join('\\n') + '\\n';\n}\n\nmodule.exports = _sort;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('tail', _tail, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n//@\n//@ ### tail([{'-n': \\<num\\>},] file [, file ...])\n//@ ### tail([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the last `<num>` lines of `file`s\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = tail({'-n': 1}, 'file*.txt');\n//@ var str = tail('file1', 'file2');\n//@ var str = tail(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the end of a `file`.\nfunction _tail(options, files) {\n  var tail = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  options.numLines = -1 * Math.abs(options.numLines);\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n\n    var lines = contents.split('\\n');\n    if (lines[lines.length - 1] === '') {\n      lines.pop();\n      shouldAppendNewline = true;\n    } else {\n      shouldAppendNewline = false;\n    }\n\n    tail = tail.concat(lines.slice(options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    tail.push(''); // to add a trailing newline once we join\n  }\n  return tail.join('\\n');\n}\nmodule.exports = _tail;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('test', _test, {\n  cmdOptions: {\n    'b': 'block',\n    'c': 'character',\n    'd': 'directory',\n    'e': 'exists',\n    'f': 'file',\n    'L': 'link',\n    'p': 'pipe',\n    'S': 'socket',\n  },\n  wrapOutput: false,\n  allowGlobbing: false,\n});\n\n\n//@\n//@ ### test(expression)\n//@\n//@ Available expression primaries:\n//@\n//@ + `'-b', 'path'`: true if path is a block device\n//@ + `'-c', 'path'`: true if path is a character device\n//@ + `'-d', 'path'`: true if path is a directory\n//@ + `'-e', 'path'`: true if path exists\n//@ + `'-f', 'path'`: true if path is a regular file\n//@ + `'-L', 'path'`: true if path is a symbolic link\n//@ + `'-p', 'path'`: true if path is a pipe (FIFO)\n//@ + `'-S', 'path'`: true if path is a socket\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ if (test('-d', path)) { /* do something with dir */ };\n//@ if (!test('-f', path)) continue; // skip if it's a regular file\n//@ ```\n//@\n//@ Evaluates `expression` using the available primaries and returns corresponding value.\nfunction _test(options, path) {\n  if (!path) common.error('no path given');\n\n  var canInterpret = false;\n  Object.keys(options).forEach(function (key) {\n    if (options[key] === true) {\n      canInterpret = true;\n    }\n  });\n\n  if (!canInterpret) common.error('could not interpret expression');\n\n  if (options.link) {\n    try {\n      return common.statNoFollowLinks(path).isSymbolicLink();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  if (!fs.existsSync(path)) return false;\n\n  if (options.exists) return true;\n\n  var stats = common.statFollowLinks(path);\n\n  if (options.block) return stats.isBlockDevice();\n\n  if (options.character) return stats.isCharacterDevice();\n\n  if (options.directory) return stats.isDirectory();\n\n  if (options.file) return stats.isFile();\n\n  /* istanbul ignore next */\n  if (options.pipe) return stats.isFIFO();\n\n  /* istanbul ignore next */\n  if (options.socket) return stats.isSocket();\n\n  /* istanbul ignore next */\n  return false; // fallback\n} // test\nmodule.exports = _test;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('to', _to, {\n  pipeOnly: true,\n  wrapOutput: false,\n});\n\n//@\n//@ ### ShellString.prototype.to(file)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cat('input.txt').to('output.txt');\n//@ ```\n//@\n//@ Analogous to the redirection operator `>` in Unix, but works with\n//@ `ShellStrings` (such as those returned by `cat`, `grep`, etc.). _Like Unix\n//@ redirections, `to()` will overwrite any existing file!_\nfunction _to(options, file) {\n  if (!file) common.error('wrong arguments');\n\n  if (!fs.existsSync(path.dirname(file))) {\n    common.error('no such file or directory: ' + path.dirname(file));\n  }\n\n  try {\n    fs.writeFileSync(file, this.stdout || this.toString(), 'utf8');\n    return this;\n  } catch (e) {\n    /* istanbul ignore next */\n    common.error('could not write to file (code ' + e.code + '): ' + file, { continue: true });\n  }\n}\nmodule.exports = _to;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('toEnd', _toEnd, {\n  pipeOnly: true,\n  wrapOutput: false,\n});\n\n//@\n//@ ### ShellString.prototype.toEnd(file)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cat('input.txt').toEnd('output.txt');\n//@ ```\n//@\n//@ Analogous to the redirect-and-append operator `>>` in Unix, but works with\n//@ `ShellStrings` (such as those returned by `cat`, `grep`, etc.).\nfunction _toEnd(options, file) {\n  if (!file) common.error('wrong arguments');\n\n  if (!fs.existsSync(path.dirname(file))) {\n    common.error('no such file or directory: ' + path.dirname(file));\n  }\n\n  try {\n    fs.appendFileSync(file, this.stdout || this.toString(), 'utf8');\n    return this;\n  } catch (e) {\n    /* istanbul ignore next */\n    common.error('could not append to file (code ' + e.code + '): ' + file, { continue: true });\n  }\n}\nmodule.exports = _toEnd;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('touch', _touch, {\n  cmdOptions: {\n    'a': 'atime_only',\n    'c': 'no_create',\n    'd': 'date',\n    'm': 'mtime_only',\n    'r': 'reference',\n  },\n});\n\n//@\n//@ ### touch([options,] file [, file ...])\n//@ ### touch([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-a`: Change only the access time\n//@ + `-c`: Do not create any files\n//@ + `-m`: Change only the modification time\n//@ + `-d DATE`: Parse `DATE` and use it instead of current time\n//@ + `-r FILE`: Use `FILE`'s times instead of current time\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ touch('source.js');\n//@ touch('-c', '/path/to/some/dir/source.js');\n//@ touch({ '-r': FILE }, '/path/to/some/dir/source.js');\n//@ ```\n//@\n//@ Update the access and modification times of each `FILE` to the current time.\n//@ A `FILE` argument that does not exist is created empty, unless `-c` is supplied.\n//@ This is a partial implementation of [`touch(1)`](http://linux.die.net/man/1/touch).\nfunction _touch(opts, files) {\n  if (!files) {\n    common.error('no files given');\n  } else if (typeof files === 'string') {\n    files = [].slice.call(arguments, 1);\n  } else {\n    common.error('file arg should be a string file path or an Array of string file paths');\n  }\n\n  files.forEach(function (f) {\n    touchFile(opts, f);\n  });\n  return '';\n}\n\nfunction touchFile(opts, file) {\n  var stat = tryStatFile(file);\n\n  if (stat && stat.isDirectory()) {\n    // don't error just exit\n    return;\n  }\n\n  // if the file doesn't already exist and the user has specified --no-create then\n  // this script is finished\n  if (!stat && opts.no_create) {\n    return;\n  }\n\n  // open the file and then close it. this will create it if it doesn't exist but will\n  // not truncate the file\n  fs.closeSync(fs.openSync(file, 'a'));\n\n  //\n  // Set timestamps\n  //\n\n  // setup some defaults\n  var now = new Date();\n  var mtime = opts.date || now;\n  var atime = opts.date || now;\n\n  // use reference file\n  if (opts.reference) {\n    var refStat = tryStatFile(opts.reference);\n    if (!refStat) {\n      common.error('failed to get attributess of ' + opts.reference);\n    }\n    mtime = refStat.mtime;\n    atime = refStat.atime;\n  } else if (opts.date) {\n    mtime = opts.date;\n    atime = opts.date;\n  }\n\n  if (opts.atime_only && opts.mtime_only) {\n    // keep the new values of mtime and atime like GNU\n  } else if (opts.atime_only) {\n    mtime = stat.mtime;\n  } else if (opts.mtime_only) {\n    atime = stat.atime;\n  }\n\n  fs.utimesSync(file, atime, mtime);\n}\n\nmodule.exports = _touch;\n\nfunction tryStatFile(filePath) {\n  try {\n    return common.statFollowLinks(filePath);\n  } catch (e) {\n    return null;\n  }\n}\n","var common = require('./common');\nvar fs = require('fs');\n\n// add c spaces to the left of str\nfunction lpad(c, str) {\n  var res = '' + str;\n  if (res.length < c) {\n    res = Array((c - res.length) + 1).join(' ') + res;\n  }\n  return res;\n}\n\ncommon.register('uniq', _uniq, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'ignoreCase',\n    'c': 'count',\n    'd': 'duplicates',\n  },\n});\n\n//@\n//@ ### uniq([options,] [input, [output]])\n//@\n//@ Available options:\n//@\n//@ + `-i`: Ignore case while comparing\n//@ + `-c`: Prefix lines by the number of occurrences\n//@ + `-d`: Only print duplicate lines, one for each group of identical lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ uniq('foo.txt');\n//@ uniq('-i', 'foo.txt');\n//@ uniq('-cd', 'foo.txt', 'bar.txt');\n//@ ```\n//@\n//@ Filter adjacent matching lines from `input`.\nfunction _uniq(options, input, output) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!pipe) {\n    if (!input) common.error('no input given');\n\n    if (!fs.existsSync(input)) {\n      common.error(input + ': No such file or directory');\n    } else if (common.statFollowLinks(input).isDirectory()) {\n      common.error(\"error reading '\" + input + \"'\");\n    }\n  }\n  if (output && fs.existsSync(output) && common.statFollowLinks(output).isDirectory()) {\n    common.error(output + ': Is a directory');\n  }\n\n  var lines = (input ? fs.readFileSync(input, 'utf8') : pipe).\n              trimRight().\n              split('\\n');\n\n  var compare = function (a, b) {\n    return options.ignoreCase ?\n           a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase()) :\n           a.localeCompare(b);\n  };\n  var uniqed = lines.reduceRight(function (res, e) {\n    // Perform uniq -c on the input\n    if (res.length === 0) {\n      return [{ count: 1, ln: e }];\n    } else if (compare(res[0].ln, e) === 0) {\n      return [{ count: res[0].count + 1, ln: e }].concat(res.slice(1));\n    } else {\n      return [{ count: 1, ln: e }].concat(res);\n    }\n  }, []).filter(function (obj) {\n                 // Do we want only duplicated objects?\n    return options.duplicates ? obj.count > 1 : true;\n  }).map(function (obj) {\n                 // Are we tracking the counts of each line?\n    return (options.count ? (lpad(7, obj.count) + ' ') : '') + obj.ln;\n  }).join('\\n') + '\\n';\n\n  if (output) {\n    (new common.ShellString(uniqed)).to(output);\n    // if uniq writes to output, nothing is passed to the next command in the pipeline (if any)\n    return '';\n  } else {\n    return uniqed;\n  }\n}\n\nmodule.exports = _uniq;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('which', _which, {\n  allowGlobbing: false,\n  cmdOptions: {\n    'a': 'all',\n  },\n});\n\n// XP's system default value for `PATHEXT` system variable, just in case it's not\n// set on Windows.\nvar XP_DEFAULT_PATHEXT = '.com;.exe;.bat;.cmd;.vbs;.vbe;.js;.jse;.wsf;.wsh';\n\n// For earlier versions of NodeJS that doesn't have a list of constants (< v6)\nvar FILE_EXECUTABLE_MODE = 1;\n\nfunction isWindowsPlatform() {\n  return process.platform === 'win32';\n}\n\n// Cross-platform method for splitting environment `PATH` variables\nfunction splitPath(p) {\n  return p ? p.split(path.delimiter) : [];\n}\n\n// Tests are running all cases for this func but it stays uncovered by codecov due to unknown reason\n/* istanbul ignore next */\nfunction isExecutable(pathName) {\n  try {\n    // TODO(node-support): replace with fs.constants.X_OK once remove support for node < v6\n    fs.accessSync(pathName, FILE_EXECUTABLE_MODE);\n  } catch (err) {\n    return false;\n  }\n  return true;\n}\n\nfunction checkPath(pathName) {\n  return fs.existsSync(pathName) && !common.statFollowLinks(pathName).isDirectory()\n    && (isWindowsPlatform() || isExecutable(pathName));\n}\n\n//@\n//@ ### which(command)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var nodeExec = which('node');\n//@ ```\n//@\n//@ Searches for `command` in the system's `PATH`. On Windows, this uses the\n//@ `PATHEXT` variable to append the extension if it's not already executable.\n//@ Returns string containing the absolute path to `command`.\nfunction _which(options, cmd) {\n  if (!cmd) common.error('must specify command');\n\n  var isWindows = isWindowsPlatform();\n  var pathArray = splitPath(process.env.PATH);\n\n  var queryMatches = [];\n\n  // No relative/absolute paths provided?\n  if (cmd.indexOf('/') === -1) {\n    // Assume that there are no extensions to append to queries (this is the\n    // case for unix)\n    var pathExtArray = [''];\n    if (isWindows) {\n      // In case the PATHEXT variable is somehow not set (e.g.\n      // child_process.spawn with an empty environment), use the XP default.\n      var pathExtEnv = process.env.PATHEXT || XP_DEFAULT_PATHEXT;\n      pathExtArray = splitPath(pathExtEnv.toUpperCase());\n    }\n\n    // Search for command in PATH\n    for (var k = 0; k < pathArray.length; k++) {\n      // already found it\n      if (queryMatches.length > 0 && !options.all) break;\n\n      var attempt = path.resolve(pathArray[k], cmd);\n\n      if (isWindows) {\n        attempt = attempt.toUpperCase();\n      }\n\n      var match = attempt.match(/\\.[^<>:\"/\\|?*.]+$/);\n      if (match && pathExtArray.indexOf(match[0]) >= 0) { // this is Windows-only\n        // The user typed a query with the file extension, like\n        // `which('node.exe')`\n        if (checkPath(attempt)) {\n          queryMatches.push(attempt);\n          break;\n        }\n      } else { // All-platforms\n        // Cycle through the PATHEXT array, and check each extension\n        // Note: the array is always [''] on Unix\n        for (var i = 0; i < pathExtArray.length; i++) {\n          var ext = pathExtArray[i];\n          var newAttempt = attempt + ext;\n          if (checkPath(newAttempt)) {\n            queryMatches.push(newAttempt);\n            break;\n          }\n        }\n      }\n    }\n  } else if (checkPath(cmd)) { // a valid absolute or relative path\n    queryMatches.push(path.resolve(cmd));\n  }\n\n  if (queryMatches.length > 0) {\n    return options.all ? queryMatches : queryMatches[0];\n  }\n  return options.all ? [] : null;\n}\nmodule.exports = _which;\n","'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => val === '' || val === './';\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = micromatch(list, patterns, { ...options, onResult });\n\n  for (let item of items) {\n    if (!matches.includes(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = require(\"events\");","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","module.exports = [\n  'cat',\n  'cd',\n  'chmod',\n  'cp',\n  'dirs',\n  'echo',\n  'exec',\n  'find',\n  'grep',\n  'head',\n  'ln',\n  'ls',\n  'mkdir',\n  'mv',\n  'pwd',\n  'rm',\n  'sed',\n  'set',\n  'sort',\n  'tail',\n  'tempdir',\n  'test',\n  'to',\n  'toEnd',\n  'touch',\n  'uniq',\n  'which',\n];\n","var map = {\n\t\"./cat\": 27,\n\t\"./cat.js\": 27,\n\t\"./cd\": 13,\n\t\"./cd.js\": 13,\n\t\"./chmod\": 28,\n\t\"./chmod.js\": 28,\n\t\"./common\": 2,\n\t\"./common.js\": 2,\n\t\"./cp\": 14,\n\t\"./cp.js\": 14,\n\t\"./dirs\": 29,\n\t\"./dirs.js\": 29,\n\t\"./echo\": 30,\n\t\"./echo.js\": 30,\n\t\"./error\": 15,\n\t\"./error.js\": 15,\n\t\"./exec\": 31,\n\t\"./exec-child\": 33,\n\t\"./exec-child.js\": 33,\n\t\"./exec.js\": 31,\n\t\"./find\": 34,\n\t\"./find.js\": 34,\n\t\"./grep\": 35,\n\t\"./grep.js\": 35,\n\t\"./head\": 36,\n\t\"./head.js\": 36,\n\t\"./ln\": 37,\n\t\"./ln.js\": 37,\n\t\"./ls\": 18,\n\t\"./ls.js\": 18,\n\t\"./mkdir\": 38,\n\t\"./mkdir.js\": 38,\n\t\"./mv\": 39,\n\t\"./mv.js\": 39,\n\t\"./popd\": 40,\n\t\"./popd.js\": 40,\n\t\"./pushd\": 41,\n\t\"./pushd.js\": 41,\n\t\"./pwd\": 17,\n\t\"./pwd.js\": 17,\n\t\"./rm\": 19,\n\t\"./rm.js\": 19,\n\t\"./sed\": 42,\n\t\"./sed.js\": 42,\n\t\"./set\": 43,\n\t\"./set.js\": 43,\n\t\"./sort\": 44,\n\t\"./sort.js\": 44,\n\t\"./tail\": 45,\n\t\"./tail.js\": 45,\n\t\"./tempdir\": 16,\n\t\"./tempdir.js\": 16,\n\t\"./test\": 46,\n\t\"./test.js\": 46,\n\t\"./to\": 47,\n\t\"./to.js\": 47,\n\t\"./toEnd\": 48,\n\t\"./toEnd.js\": 48,\n\t\"./touch\": 49,\n\t\"./touch.js\": 49,\n\t\"./uniq\": 50,\n\t\"./uniq.js\": 50,\n\t\"./which\": 51,\n\t\"./which.js\": 51\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\n\n// TODO: If the label matches the open file label (multiple files with same name), show a longer path\nexport default class RelatedFile extends vscode.TreeItem {\n  constructor(\n    public readonly fileFsPath: string,\n    count?: number,\n    longLabel: boolean = false\n  ) {\n    super(fileFsPath, vscode.TreeItemCollapsibleState.None);\n\n    const uri = vscode.Uri.file(fileFsPath);\n    this.label = longLabel ? fileFsPath : path.basename(fileFsPath);\n    // The id is used for the sameness check in the UI, ensure the label isn't used\n    this.id = fileFsPath;\n    this.tooltip = fileFsPath;\n    this.resourceUri = uri;\n    this.description = count\n      ? `${count} ${count > 1 ? \"commits\" : \"commit\"}`\n      : undefined;\n    this.command = {\n      title: `Open ${path.basename(fileFsPath)}`,\n      command: \"vscode.open\",\n      arguments: [uri],\n    };\n  }\n}\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\n\n// TODO: What's a good value here?\nconst MAX_CACHE_AGE = 5; // minutes\nconst ONE_MINUTE = 1000 * 60; // ms\n\ntype CacheItem<T> = {\n  entry: T;\n  entryTime: ReturnType<Date[\"valueOf\"]>;\n};\n\nexport default class Cache<T> {\n  /** A map from a workspace fsPath to a map of a file's fsPath to a cache entry */\n  private _state = new Map<\n    string,\n    Map<string, CacheItem<T> | undefined> | undefined\n  >();\n  private _lastClear: ReturnType<Date[\"valueOf\"]> | undefined;\n\n  /** Get a cache item for a file in a workspace */\n  get(workspaceUri: vscode.Uri, fileUri: vscode.Uri): T | undefined {\n    const workspaceFsPath = workspaceUri.fsPath;\n    const fileFsPath = path.resolve(workspaceFsPath, fileUri.fsPath);\n    return this._state.get(workspaceFsPath)?.get(fileFsPath)?.entry;\n  }\n\n  /** Set a cache item for a file in a workspace */\n  set(workspaceUri: vscode.Uri, fileUri: vscode.Uri, entry: T): void {\n    const workspaceFsPath = workspaceUri.fsPath;\n    const fileFsPath = path.resolve(workspaceFsPath, fileUri.fsPath);\n    let workspaceCache = this._state.get(workspaceFsPath);\n    if (!workspaceCache) {\n      workspaceCache = new Map();\n      this._state.set(workspaceFsPath, workspaceCache);\n    }\n    const cacheEntry = {\n      entry,\n      entryTime: new Date().valueOf(),\n    };\n    workspaceCache.set(fileFsPath, cacheEntry);\n  }\n\n  /** Clear the cache for a file in a workspace, or for a full workspace if only that is provided */\n  delete(workspaceUri: vscode.Uri, fileUri?: vscode.Uri): void {\n    const workspaceFsPath = workspaceUri.fsPath;\n    if (typeof fileUri === \"undefined\") {\n      // Clear the whole workspace, if applicable\n      this._state.delete(workspaceFsPath);\n    } else {\n      // Clear only the file, if applicable\n      const fileFsPath = path.resolve(workspaceFsPath, fileUri.fsPath);\n      this._state.get(workspaceFsPath)?.delete(fileFsPath);\n    }\n  }\n\n  /** Clear all cache entries */\n  clear(): void {\n    this._state.clear();\n  }\n\n  async clearOldEntries() {\n    // Throttle clears to once a minute at most\n    const now = new Date().valueOf();\n    if (this._lastClear && now - this._lastClear < ONE_MINUTE) {\n      return;\n    }\n    this._lastClear = new Date().valueOf();\n\n    for (const [workspaceFsPath, workspaceCache] of this._state.entries()) {\n      for (const [fileFsPath, cacheEntry] of this._state\n        .get(workspaceFsPath)\n        ?.entries() || []) {\n        if (\n          // This should never happen but just in case there's no sanity\n          !cacheEntry ||\n          // Or if the cache item is old\n          now - cacheEntry.entryTime > MAX_CACHE_AGE * ONE_MINUTE\n        ) {\n          this._state.get(workspaceFsPath)?.delete(fileFsPath);\n        }\n      }\n      // If nothing remains in the workspace cache, delete it too\n      if (!workspaceCache?.size) {\n        this._state.delete(workspaceFsPath);\n      }\n    }\n  }\n}\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport * as shelljs from \"shelljs\";\nimport { FSWatcher, promises as fs, unwatchFile, watch, watchFile } from \"fs\";\n\nlet git = \"git\";\ntry {\n  // See https://github.com/Sertion/vscode-gitblame/blob/master/src/git/util/gitcommand.ts#L13\n  const vscodeGit = vscode.extensions.getExtension(\"vscode.git\");\n  if (vscodeGit?.exports.enabled) {\n    git = vscodeGit.exports.getAPI(1).git.path || git;\n  }\n} catch (_) {}\n\n// See https://gist.github.com/davidrleonard/2962a3c40497d93c422d1269bcd38c8f\nfunction filteredExec(\n  command: string,\n  options: Omit<shelljs.ExecOptions, \"async\">\n): Promise<string[]> {\n  return new Promise(function (resolve, reject) {\n    const baseOptions: shelljs.ExecOptions = { async: true, silent: true };\n    shelljs.exec(\n      command,\n      Object.assign(baseOptions, options),\n      function (code, stdout, stderr) {\n        if (code !== 0) return reject(new Error(stderr));\n        const result = (stdout || \"\").trim().split(/\\r?\\n/);\n        const noEmptyLines = result.filter(Boolean);\n        return resolve(noEmptyLines);\n      }\n    );\n  });\n}\n\n// TODO: Is there a better way to implement this?\nexport async function onBranchChange(\n  workspaceUri: vscode.Uri,\n  callback: () => void\n) {\n  const head = path.resolve(workspaceUri.fsPath, \"./.git/HEAD\");\n  let watcher: FSWatcher | undefined;\n  try {\n    // Ensure the file exists\n    await fs.stat(head);\n    // TODO: Investigate why `fs.watch()` doesn't seem to figure out HEAD changes\n    watchFile(head, callback);\n  } catch (error) {\n    console.error(error);\n  }\n\n  return function destroyListener() {\n    unwatchFile(head, callback);\n  };\n}\n\n/** Get relative paths of files that have been committed together with a given file, include duplicates */\nexport default async function getRelatedFilesFor(\n  workspaceUri: vscode.Uri,\n  fileUri: vscode.Uri\n) {\n  const fileFsPath = path.resolve(workspaceUri.fsPath, fileUri.fsPath);\n  return filteredExec(\n    // See https://stackoverflow.com/a/42528210/1470607\n    // This returns non-zero if we're not in a repository so we don't need to check for that separately\n    // NB! The `git log --follow` flag makes git log incredibly slow compared to non-follow, so we're using a simple `git rev-list` instead\n    `${git} rev-list HEAD -- ${fileFsPath} | xargs ${git} show --format=\"\" --name-only`,\n    {\n      cwd: workspaceUri.fsPath,\n    }\n  );\n}\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport { promises as fs } from \"fs\";\nimport * as micromatch from \"micromatch\";\n\nimport RelatedFile from \"./relatedFile\";\nimport Cache from \"./cache\";\nimport getRelatedFilesFor from \"./git\";\n\n// TODO: Make this configurable\nconst MAX_COUNT = 25;\n// TODO: Make this configurable\nconst IGNORE_GLOBS: string[] = [\"**/yarn.lock\", \"**/package-lock.json\"];\n\nexport default class RelatedFilesProvider\n  implements vscode.TreeDataProvider<RelatedFile>\n{\n  private _onDidChangeTreeData: vscode.EventEmitter<\n    RelatedFile | undefined | null | void\n  > = new vscode.EventEmitter<RelatedFile | undefined | null | void>();\n  readonly onDidChangeTreeData: vscode.Event<\n    RelatedFile | undefined | null | void\n  > = this._onDidChangeTreeData.event;\n\n  private _cache = new Cache<Promise<RelatedFile[]>>();\n\n  updateView(): void {\n    // Update the tree view\n    this._onDidChangeTreeData.fire();\n\n    // TODO: Do this only after `getChildren()` and automatically update the current file's cache if we have it\n    // Clean up old cache entries\n    setTimeout(() => {\n      this._cache.clearOldEntries();\n    }, 0);\n  }\n\n  getTreeItem(item: RelatedFile): vscode.TreeItem {\n    return item;\n  }\n\n  async getChildren(): Promise<RelatedFile[]> {\n    const activeTextEditor = vscode.window.activeTextEditor;\n    if (!activeTextEditor) {\n      return [];\n    }\n    const workspace = vscode.workspace.getWorkspaceFolder(\n      activeTextEditor.document.uri\n    );\n    if (!workspace) {\n      return [];\n    }\n    try {\n      return this._getCachedRelatedFilesFor(\n        workspace.uri,\n        activeTextEditor.document.uri\n      );\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n\n  async preloadCacheFor(\n    workspaceUri: vscode.Uri,\n    fileUri: vscode.Uri\n  ): Promise<void> {\n    try {\n      await this._getCachedRelatedFilesFor(workspaceUri, fileUri);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  clearCache() {\n    this._cache.clear();\n  }\n\n  /** Either get related files from cache or cache them beforehand for future use */\n  private async _getCachedRelatedFilesFor(\n    workspaceUri: vscode.Uri,\n    fileUri: vscode.Uri\n  ): Promise<RelatedFile[]> {\n    const cacheHit = this._cache.get(workspaceUri, fileUri);\n    if (cacheHit) {\n      return cacheHit;\n    }\n    const promise = this._getRelatedFilesFor(workspaceUri, fileUri);\n    this._cache.set(workspaceUri, fileUri, promise);\n    return promise;\n  }\n\n  private async _getRelatedFilesFor(\n    workspaceUri: vscode.Uri,\n    fileUri: vscode.Uri\n  ): Promise<RelatedFile[]> {\n    const relativeFsPaths = await getRelatedFilesFor(workspaceUri, fileUri);\n\n    const workspaceFsPath = workspaceUri.fsPath;\n    const fileFsPath = path.resolve(workspaceFsPath, fileUri.fsPath);\n\n    // Figure out how many times each related file was committed along with this one\n    const fullFsPaths = new Set<string>();\n    const fullFsPathCounts = new Map<string, number>();\n    for (let ii = 0; ii < relativeFsPaths.length; ii++) {\n      const fileName = relativeFsPaths[ii];\n      // This shouldn't happen, but just to be sure\n      if (!fileName) {\n        throw new TypeError(\"Received no file name\");\n      }\n      const fullFsPath = path.resolve(workspaceFsPath, fileName);\n\n      // Exclude the open file itself\n      if (fullFsPath === fileFsPath) {\n        continue;\n      }\n      fullFsPaths.add(fullFsPath);\n      fullFsPathCounts.set(\n        fullFsPath,\n        (fullFsPathCounts.get(fullFsPath) ?? 0) + 1\n      );\n    }\n\n    const validFsPaths = (\n      await Promise.all(\n        Array.from(fullFsPaths).map(async (fullFsPath) => {\n          try {\n            // Check whether the files still exist\n            await fs.stat(fullFsPath);\n            // Check whether the path matches any ignore globs\n            if (micromatch.isMatch(fullFsPath, IGNORE_GLOBS)) {\n              return undefined;\n            }\n            return fullFsPath;\n          } catch {\n            // Ignore the path\n            return undefined;\n          }\n        })\n      )\n    ).filter((result) => typeof result !== \"undefined\") as string[];\n\n    return validFsPaths\n      .sort(\n        (a, b) =>\n          // Sort primarily by commit count\n          (fullFsPathCounts.get(b) ?? 0) - (fullFsPathCounts.get(a) ?? 0) ||\n          // And then alphabetically\n          b.localeCompare(a)\n      )\n      .slice(0, MAX_COUNT)\n      .map(\n        (fullFsPath) =>\n          new RelatedFile(fullFsPath, fullFsPathCounts.get(fullFsPath))\n      );\n  }\n}\n","import * as vscode from \"vscode\";\n\nimport Provider from \"./provider\";\nimport { onBranchChange } from \"./git\";\n\nlet provider: Provider | undefined;\n\nlet watcher;\n\nexport function activate(context: vscode.ExtensionContext) {\n  // See https://code.visualstudio.com/api/extension-guides/tree-view\n  provider = new Provider();\n  vscode.window.registerTreeDataProvider(\"relatedFiles\", provider);\n\n  // This is currently only for debugging\n  vscode.commands.registerCommand(\"relatedFiles.refresh\", () => {\n    provider?.clearCache();\n    provider?.updateView();\n  });\n\n  // console.log(vscode.workspace.workspaceFolders);\n  // vscode.workspace.onDidChangeWorkspaceFolders((event) => {\n  //   console.log(event);\n  // });\n\n  // TODO: Investigate\n  // if (vscode.workspace.workspaceFolders) {\n  //   for (const folder of vscode.workspace.workspaceFolders) {\n  //     onBranchChange(folder.uri, () => {\n  //       console.log(\"fire\");\n  //     });\n  //   }\n  // }\n\n  // TODO: Do we need to do this for every workspace, watch for those changes etc?\n  // onBranchChange(() => {\n  //   console.log(\"branch changed\");\n  // });\n\n  // First load\n  provider.updateView();\n  // Whenever the active editor changes, update or empty the view accordingly\n  vscode.window.onDidChangeActiveTextEditor(\n    () => {\n      provider?.updateView();\n    },\n    null,\n    context.subscriptions\n  );\n\n  // TODO: This seems to yield only the active tab, can we somehow retrieve all tabs?\n  // For open files, preload related files\n  for (const openDocument of vscode.workspace.textDocuments) {\n    const workspace = vscode.workspace.getWorkspaceFolder(openDocument.uri);\n    if (workspace) {\n      provider.preloadCacheFor(workspace.uri, openDocument.uri);\n    }\n  }\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n  // TODO: Do we need to clean up anything manually?\n  // provider?.destroy();\n}\n"],"sourceRoot":""}